ACTAGR ~ EDUBASICA + JOVEN + ADULTO + TIEMPO_PROFESION + HORASTRABAJO + HPICO + CSECO +
CONG_CD + CONG_EF + SININFOTRF
STRESS ~ EDUBASICA + JOVEN + ADULTO + TIEMPO_PROFESION + HORASTRABAJO + HPICO + CSECO +
CONG_CD + CONG_EF + SININFOTRF
AMBLABOR ~ EDUBASICA + JOVEN + ADULTO + TIEMPO_PROFESION + HORASTRABAJO + HPICO + CSECO +
CONG_CD + CONG_EF + SININFOTRF + ACTAGR + STRESS
CONDSEG ~ EDUBASICA + JOVEN + ADULTO + TIEMPO_PROFESION + HORASTRABAJO + HPICO + CSECO +
CONG_CD + CONG_EF + SININFOTRF
HABPROSOC ~ EDUBASICA + JOVEN + ADULTO + TIEMPO_PROFESION + HORASTRABAJO + HPICO + CSECO +
CONG_CD + CONG_EF + SININFOTRF
# Varianzas - Covarianzas
ACTAGR ~~ STRESS
# Interceptos"
fit5 <- cfa(model5, data = DBVL, orthogonal = TRUE, std.lv = TRUE)
summary(fit5, fit.measures=TRUE, standardized = TRUE)
semPaths(fit5,"std", title = FALSE, curvePivot = TRUE)
# Solicitar los 10 primeros IM con valores m?s altos
modindices(fit5, sort = TRUE, maximum.number = 10)
fit51 <- cfa(model5, data = DBVL, orthogonal = TRUE)
summary(fit51, fit.measures= TRUE, standardized = TRUE)
semPaths(fit51, what = "std", style = "mx", title = FALSE, curvePivot = TRUE)
#parameterestimates(fit11)
modindices(fit51, sort = TRUE, maximum.number = 10)
sink()
model6 <- " #Variables Latentes
ACTAGR =~ FRbr + EnfCond + AFrSem + CulFr + OmLmVel + IgPare
STRESS =~ Ans + ComAfec + StrC
AMBLABOR =~ PrPers + AmbT + ConsCl
CONDSEG =~  CinSeg + UsDirec
HABPROSOC =~ ComVrb
# Regresiones
ACTAGR ~ EDUBASICA + HORASTRABAJO + HPICO + CSECO +
CONG_CD + CONG_EF + SININFOTRF
STRESS ~ TIEMPO_PROFESION + HORASTRABAJO + HPICO + CONG_EF + SININFOTRF
AMBLABOR ~ ADULTO + TIEMPO_PROFESION + HORASTRABAJO + HPICO
CONDSEG ~ EDUBASICA + TIEMPO_PROFESION + HORASTRABAJO + CONG_EF + SININFOTRF
HABPROSOC ~ EDUBASICA + JOVEN + ADULTO + HORASTRABAJO + HPICO + CSECO +
CONG_CD + CONG_EF + SININFOTRF
# Interceptos"
fit6 <- cfa(model6, data = DBVL, orthogonal = TRUE, std.lv = TRUE)
summary(fit6, fit.measures=TRUE, standardized = TRUE)
sink("ResulMODELO_6.txt")
model6 <- " #Variables Latentes
ACTAGR =~ FRbr + EnfCond + AFrSem + CulFr + OmLmVel + IgPare
STRESS =~ Ans + ComAfec + StrC + ConsCl
AMBLABOR =~ PrPers + AmbT + ConsCl
CONDSEG =~  CinSeg + UsDirec
HABPROSOC =~ ComVrb + ComAfec
# Regresiones
ACTAGR ~ EDUBASICA + HORASTRABAJO + HPICO + CONG_CD + CONG_EF + SININFOTRF
STRESS ~ JOVEN + HORASTRABAJO + HPICO + CSECO + SININFOTRF
AMBLABOR ~ EDUBASICA + ADULTO + CONG_CD + ACTAGR + STRESS
CONDSEG ~ EDUBASICA + CSECO
HABPROSOC ~ JOVEN + ADULTO + HORASTRABAJO + HPICO + CONG_CD + CONG_EF + SININFOTRF
# Varianzas - Covarianzas
ACTAGR ~~ STRESS
# Interceptos"
fit6 <- cfa(model6, data = DBVL, orthogonal = TRUE, std.lv = TRUE)
summary(fit6, fit.measures=TRUE, standardized = TRUE)
semPaths(fit6,"std", title = FALSE, curvePivot = TRUE)
# Solicitar los 10 primeros IM con valores m?s altos
modindices(fit6, sort = TRUE, maximum.number = 10)
fit61 <- cfa(model6, data = DBVL, orthogonal = TRUE)
summary(fit61, fit.measures= TRUE, standardized = TRUE)
semPaths(fit61, what = "std", style = "mx", title = FALSE, curvePivot = TRUE)
#parameterestimates(fit11)
modindices(fit61, sort = TRUE, maximum.number = 10)
sink()
sink("ResulMODELO_7.txt")
model7 <- " #Variables Latentes
ACTAGR =~ FRbr + EnfCond + AFrSem + CulFr + OmLmVel + IgPare
STRESS =~ Ans + ComAfec + StrC + ConsCl + UsDirec
AMBLABOR =~ PrPers + AmbT + ConsCl
CONDSEG =~  CinSeg + UsDirec
HABPROSOC =~ ComVrb + ComAfec
# Regresiones
ACTAGR ~ EDUBASICA + HORASTRABAJO + HPICO + CONG_CD + CONG_EF + SININFOTRF
STRESS ~ JOVEN + HORASTRABAJO + HPICO + CSECO + SININFOTRF
AMBLABOR ~ EDUBASICA + ADULTO + CONG_CD + ACTAGR + STRESS
CONDSEG ~ EDUBASICA + CSECO + STRESS
HABPROSOC ~ JOVEN + ADULTO + HORASTRABAJO + HPICO + CONG_CD + CONG_EF + SININFOTRF
# Varianzas - Covarianzas
ACTAGR ~~ STRESS
# Interceptos"
fit7 <- lavaan::cfa(model7, data = DBVL, orthogonal = TRUE, std.lv = TRUE)
summary(fit7, fit.measures=TRUE, standardized = TRUE)
semPaths(fit7,"std", title = FALSE, curvePivot = TRUE)
# Solicitar los 10 primeros IM con valores m?s altos
modindices(fit7, sort = TRUE, maximum.number = 10)
fit71 <- cfa(model7, data = DBVL, orthogonal = TRUE)
summary(fit71, fit.measures= TRUE, standardized = TRUE)
semPaths(fit71, what = "std", style = "mx", title = FALSE, curvePivot = TRUE)
#parameterestimates(fit11)
modindices(fit71, sort = TRUE, maximum.number = 10)
sink()
sink("ResulMODELO_8.txt")
model8 <-  " #Variables Latentes
ACTAGR =~ FRbr + EnfCond + AFrSem + CulFr + OmLmVel + IgPare
STRESS =~ Ans + ComAfec + StrC + ConsCl + UsDirec + CulFr
AMBLABOR =~ PrPers + AmbT + ConsCl
CONDSEG =~  CinSeg + UsDirec
HABPROSOC =~ ComVrb + ComAfec
# Regresiones
ACTAGR ~ EDUBASICA + HORASTRABAJO + CONG_CD + CONG_EF + SININFOTRF
STRESS ~ JOVEN + HORASTRABAJO + HPICO  + SININFOTRF
AMBLABOR ~  ADULTO + CONG_CD + ACTAGR + STRESS
CONDSEG ~ EDUBASICA  + STRESS
HABPROSOC ~ JOVEN + ADULTO + HORASTRABAJO  + CONG_CD + CONG_EF + SININFOTRF
# Varianzas - Covarianzas
ACTAGR ~~ STRESS
FRbr ~~ AFrSem
# Interceptos"
fit8 <- cfa(model8, data = DBVL, orthogonal = TRUE, std.lv = TRUE)
summary(fit8, fit.measures=TRUE, standardized = TRUE)
semPaths(fit8,"std", title = FALSE, curvePivot = TRUE)
# Solicitar los 10 primeros IM con valores m?s altos
modindices(fit8, sort = TRUE, maximum.number = 10)
fit81 <- cfa(model8, data = DBVL, orthogonal = TRUE)
summary(fit81, fit.measures= TRUE, standardized = TRUE)
semPaths(fit81, what = "std", style = "mx", title = FALSE, curvePivot = TRUE)
#parameterestimates(fit11)
modindices(fit81, sort = TRUE, maximum.number = 10)
sink()
sink("ResulMODELO_9.txt")
model9 <- " #Variables Latentes
ACTAGR =~ FRbr + EnfCond + AFrSem + CulFr + OmLmVel + IgPare
STRESS =~ Ans + ComAfec + StrC + ConsCl + UsDirec + CulFr
AMBLABOR =~ PrPers + AmbT + ConsCl
CONDSEG =~  CinSeg + UsDirec
HABPROSOC =~ ComVrb + ComAfec + ConsCl
# Regresiones
ACTAGR ~ EDUBASICA + HORASTRABAJO + CONG_CD + CONG_EF + SININFOTRF
STRESS ~ JOVEN + HORASTRABAJO + HPICO  + SININFOTRF
AMBLABOR ~  ADULTO + CONG_CD + ACTAGR + STRESS
CONDSEG ~ EDUBASICA  + STRESS
HABPROSOC ~ JOVEN + ADULTO + HORASTRABAJO  + CONG_CD + CONG_EF + SININFOTRF
# Varianzas - Covarianzas
ACTAGR ~~ STRESS
FRbr ~~ AFrSem
# Interceptos"
fit9 <- cfa(model9, data = DBVL, orthogonal = TRUE, std.lv = TRUE)
summary(fit9, fit.measures=TRUE, standardized = TRUE)
semPaths(fit9,"std", title = FALSE, curvePivot = TRUE)
# Solicitar los 10 primeros IM con valores m?s altos
modindices(fit9, sort = TRUE, maximum.number = 10)
fit91 <- cfa(model9, data = DBVL, orthogonal = TRUE)
summary(fit91, fit.measures= TRUE, standardized = TRUE)
semPaths(fit91, what = "std", style = "mx", title = FALSE, curvePivot = TRUE)
#parameterestimates(fit11)
modindices(fit91, sort = TRUE, maximum.number = 10)
sink()
sink("ComparacionModelos.txt")
fit_index01 <- broom::glance(fit1) %>%
select(chisq, npar, cfi, tli, rmsea, rmsea.conf.high, srmr, aic, bic, estimator)
fit_index02 <- broom::glance(fit2) %>%
select(chisq, npar, cfi, tli, rmsea, rmsea.conf.high, srmr, aic, bic, estimator)
fit_index03 <- broom::glance(fit3) %>%
select(chisq, npar, cfi, tli, rmsea, rmsea.conf.high, srmr, aic, bic, estimator)
fit_index04 <- broom::glance(fit4) %>%
select(chisq, npar, cfi, tli, rmsea, rmsea.conf.high, srmr, aic, bic, estimator)
fit_index05 <- broom::glance(fit5) %>%
select(chisq, npar, cfi, tli, rmsea, rmsea.conf.high, srmr, aic, bic, estimator)
fit_index06 <- broom::glance(fit6) %>%
select(chisq, npar, cfi, tli, rmsea, rmsea.conf.high, srmr, aic, bic, estimator)
fit_index07 <- broom::glance(fit7) %>%
select(chisq, npar, cfi, tli, rmsea, rmsea.conf.high, srmr, aic, bic, estimator)
fit_index08 <- broom::glance(fit8) %>%
select(chisq, npar, cfi, tli, rmsea, rmsea.conf.high, srmr, aic, bic, estimator)
fit_index09 <- broom::glance(fit9) %>%
select(chisq, npar, cfi, tli, rmsea, rmsea.conf.high, srmr, aic, bic, estimator)
# Uniendo
bind_rows(fit_index01, fit_index02, fit_index03, fit_index04, fit_index05, fit_index06,
fit_index07, fit_index08, fit_index09, .id = "Modelo")
sink()
# Cargar Datos desde MAC
DBVL <- readRDS("/Users/williz/Desktop/ModelosED/Database/DBModeloLogitVL.rds")
names(DBVL)
DBVL$JOVEN <- (ifelse((DBVL$EDAD == 1), 1,0))
DBVL$ADULTO <- (ifelse((DBVL$EDAD == 2 | DBVL$EDAD == 3),1,0))
DBVL$MAYOR_60 <- (ifelse((DBVL$EDAD == 4),1,0))
# NIVEL EDUCATIVO EDUBASICA - EDUSUP
DBVL$EDUBASICA <- (ifelse((DBVL$NIVELEDUCATIVO == 1 | DBVL$NIVELEDUCATIVO == 4), 1,0))
DBVL$EDUSUP <- (ifelse((DBVL$NIVELEDUCATIVO == 2 | DBVL$NIVELEDUCATIVO == 3),1,0))
# HORA DEL RECORRIDO HPICO - HVALLE
DBVL$HPICO <- (ifelse((DBVL$HPICOHVALLE == 1), 1,0))
DBVL$HVALLE <- (ifelse((DBVL$HPICOHVALLE == 2), 1,0))
# CONDICIONES CLIMATICAS CSECO - CLLUVIA
DBVL$CSECO <- (ifelse((DBVL$CLIMA == 1),1,0))
DBVL$CLLUVIA <- (ifelse((DBVL$CLIMA == 2),1,0))
# NIVEL DE CONGESTION
DBVL$CONG_AB <- (ifelse((DBVL$CONGESTION == 1 | DBVL$CONGESTION == 2), 1,0))
DBVL$CONG_CD <- (ifelse((DBVL$CONGESTION == 3 | DBVL$CONGESTION == 4), 1,0))
DBVL$CONG_EF <- (ifelse((DBVL$CONGESTION == 5 | DBVL$CONGESTION == 6), 1,0))
# INFORMACION TRAFICO DE LA CIUDAD
DBVL$SININFOTRF <- (ifelse((DBVL$INFOTRAFICO == 1),1,0))
DBVL$CONINFOTRF <- (ifelse((DBVL$INFOTRAFICO == 2),1,0))
head(DBVL)
# ?Quiero orden!
tibble::as_tibble(DBVL)
names(DBVL)
dplyr::glimpse(DBVL)
summary(DBVL)
#Renombrar las Variables
DBVL <- rename(DBVL, replace =c(ComunicVerbal = "ComVrb",
Ansiedad = "Ans",
ComunicAfectiva = "ComAfec",
PresPersonal = "PrPers",
AmbTrabajo = "AmbT",
StressAlCond = "StrC",
ConsidCliente = "ConsCl",
CinturonDeSeguridad = "CinSeg",
FrenoRapidoBrusco = "FRbr",
UsaDireccionales = "UsDirec",
EnfadoConOtroConductor = "EnfCond",
AceleraFrenaBruscamenteSemaforo = "AFrSem",
CulebreaConFrecuencia = "CulFr",
OmiteLimiteVelocidad = "OmLmVel",
IgnoraSenhalPare = "IgPare",
UsoCelular = "UsCel"))
write.csv2(DBVL,
file="/Users/williz/Desktop/ModelosED/Database/DBModeloLogitVL1.csv", sep="\t", dec=".")
DBVL1 <- readRDS("/Users/williz/Desktop/ModelosED/Database/DBModeloLogitVL1.rds")
write.csv2(DBVL,
file="/Users/williz/Desktop/ModelosED/Database/DBModeloLogitVL1.csv", sep="\t", dec=".")
write.csv2(DBVL,
file="/Users/williz/Desktop/ModelosED/Database/DBModeloLogitVL1.csv")
DBVL1 <- readRDS("/Users/williz/Desktop/ModelosED/Database/DBModeloLogitVL1.rds")
DBVL1 <- readxl("Users/williz/Desktop/ModelosED/Database/DBModeloLogitVL1.csv")
DBVL1 <- read_xlsx("Users/williz/Desktop/ModelosED/Database/DBModeloLogitVL1.csv")
DBModeloLogitVL1 <- read.csv2("~/Desktop/ModelosED/Database/DBModeloLogitVL1.csv", header=FALSE)
View(DBModeloLogitVL1)
View(DBModeloLogitVL1)
DBModeloLogitVL1 <- read.csv2("~/Desktop/ModelosED/Database/DBModeloLogitVL1.csv")
View(DBModeloLogitVL1)
View(DBModeloLogitVL1)
View(DBModeloLogitVL1)
sink("ResulMODELO_10.txt")
model10 <- " #Variables Latentes
ACTAGR =~ FRbr + EnfCond + AFrSem + CulFr + OmLmVel + IgPare
STRESS =~ Ans + ComAfec + StrC + ConsCl + UsDirec + CulFr
AMBLABOR =~ PrPers + AmbT + ConsCl
CONDSEG =~  CinSeg + UsDirec
HABPROSOC =~ ComVrb + ComAfec + ConsCl
# Regresiones
ACTAGR ~ EDUBASICA + HORASTRABAJO + CONG_CD + CONG_EF + SININFOTRF
STRESS ~ JOVEN + HORASTRABAJO + HPICO  + SININFOTRF
AMBLABOR ~  ADULTO + CONG_CD + ACTAGR + STRESS
CONDSEG ~ EDUBASICA  + STRESS
HABPROSOC ~ JOVEN + ADULTO + HORASTRABAJO  + CONG_CD + CONG_EF + SININFOTRF
# Varianzas - Covarianzas
ACTAGR ~~ STRESS
FRbr ~~ AFrSem
# Interceptos"
sink("ResulMODELO_10.txt")
model10 <- " #Variables Latentes
ACTAGR =~ FRbr + EnfCond + AFrSem + CulFr + OmLmVel + IgPare
STRESS =~ Ans + ComAfec + StrC + ConsCl + UsDirec + CulFr
AMBLABOR =~ PrPers + AmbT + ConsCl
CONDSEG =~  CinSeg + UsDirec + Ans
HABPROSOC =~ ComVrb + ComAfec + ConsCl
# Regresiones
ACTAGR ~ EDUBASICA + HORASTRABAJO + CONG_CD + CONG_EF + SININFOTRF
STRESS ~ JOVEN + HORASTRABAJO + HPICO  + SININFOTRF
AMBLABOR ~  ADULTO + CONG_CD + ACTAGR + STRESS
CONDSEG ~ EDUBASICA  + STRESS
HABPROSOC ~ JOVEN + ADULTO + HORASTRABAJO  + CONG_CD + CONG_EF + SININFOTRF
# Varianzas - Covarianzas
ACTAGR ~~ STRESS
FRbr ~~ AFrSem
# Interceptos"
fit10 <- cfa(model10, data = DBVL, orthogonal = TRUE, std.lv = TRUE)
summary(fit10, fit.measures=TRUE, standardized = TRUE)
semPaths(fit10,"std", title = FALSE, curvePivot = TRUE)
# Solicitar los 10 primeros IM con valores m?s altos
modindices(fit10, sort = TRUE, maximum.number = 10)
fit10_1 <- cfa(model10, data = DBVL, orthogonal = TRUE)
summary(fit10_1, fit.measures= TRUE, standardized = TRUE)
semPaths(fit10_1, what = "std", style = "mx", title = FALSE, curvePivot = TRUE)
#parameterestimates(fit11)
modindices(fit10_1, sort = TRUE, maximum.number = 10)
sink()
sink("ResulMODELO_11.txt")
model11 <- " #Variables Latentes
ACTAGR =~ FRbr + EnfCond + AFrSem + CulFr + OmLmVel + IgPare
STRESS =~ Ans + ComAfec + StrC + ConsCl + UsDirec + CulFr
AMBLABOR =~ PrPers + AmbT + ConsCl
CONDSEG =~  CinSeg + UsDirec + Ans
HABPROSOC =~ ComVrb + ComAfec + ConsCl
# Regresiones
ACTAGR ~ EDUBASICA + HORASTRABAJO + CONG_CD + CONG_EF + SININFOTRF
STRESS ~ JOVEN + HORASTRABAJO + HPICO  + SININFOTRF
AMBLABOR ~  ADULTO + CONG_CD + ACTAGR + STRESS
CONDSEG ~ EDUBASICA  + STRESS
HABPROSOC ~ JOVEN + ADULTO + HORASTRABAJO  + CONG_CD + CONG_EF + SININFOTRF
# Varianzas - Covarianzas
ACTAGR ~~ STRESS
FRbr ~~ AFrSem
CulFr ~~ ComVrb
# Interceptos"
# Interceptos"
fit11 <- lavaan::cfa(model11, data = DBVL, orthogonal = TRUE, std.lv = TRUE)
summary(fit11, fit.measures=TRUE, standardized = TRUE)
semPaths(fit11,"std", title = FALSE, curvePivot = TRUE)
# Solicitar los 10 primeros IM con valores m?s altos
modindices(fit11, sort = TRUE, maximum.number = 10)
fit11_1 <- cfa(model11, data = DBVL, orthogonal = TRUE)
summary(fit11_1, fit.measures= TRUE, standardized = TRUE)
semPaths(fit11_1, what = "std", style = "mx", title = FALSE, curvePivot = TRUE)
#parameterestimates(fit11)
modindices(fit11_1, sort = TRUE, maximum.number = 10)
sink()
sink("ResulMODELO_11.txt")
model12 <- " #Variables Latentes
ACTAGR =~ FRbr + EnfCond + AFrSem + CulFr + OmLmVel + IgPare
STRESS =~ Ans + ComAfec + StrC + ConsCl + UsDirec + CulFr
AMBLABOR =~ PrPers + AmbT + ConsCl
CONDSEG =~  CinSeg + UsDirec + Ans
HABPROSOC =~ ComVrb + ComAfec + ConsCl
# Regresiones
ACTAGR ~ EDUBASICA + HORASTRABAJO + CONG_CD + CONG_EF + SININFOTRF
STRESS ~ JOVEN + HORASTRABAJO + HPICO  + SININFOTRF
AMBLABOR ~  ADULTO + CONG_CD + ACTAGR + STRESS
CONDSEG ~ EDUBASICA  + STRESS
HABPROSOC ~ JOVEN + ADULTO + HORASTRABAJO  + CONG_CD + CONG_EF + SININFOTRF + AMBLABOR
# Varianzas - Covarianzas
ACTAGR ~~ STRESS
FRbr ~~ AFrSem
CulFr ~~ ComVrb
Ans ~~ ComAfec
# Interceptos"
fit12 <- lavaan::cfa(model12, data = DBVL, orthogonal = TRUE, std.lv = TRUE)
summary(fit12, fit.measures=TRUE, standardized = TRUE)
semPaths(fit12,"std", title = FALSE, curvePivot = TRUE)
# Solicitar los 10 primeros IM con valores m?s altos
modindices(fit12, sort = TRUE, maximum.number = 10)
fit12_1 <- cfa(model12, data = DBVL, orthogonal = TRUE)
summary(fit12_1, fit.measures= TRUE, standardized = TRUE)
semPaths(fit12_1, what = "std", style = "mx", title = FALSE, curvePivot = TRUE)
#parameterestimates(fit11)
modindices(fit12_1, sort = TRUE, maximum.number = 10)
sink()
sink("ResulMODELO_11.txt")
model11 <- " #Variables Latentes
ACTAGR =~ FRbr + EnfCond + AFrSem + CulFr + OmLmVel + IgPare
STRESS =~ Ans + ComAfec + StrC + ConsCl + UsDirec + CulFr
AMBLABOR =~ PrPers + AmbT + ConsCl
CONDSEG =~  CinSeg + UsDirec + Ans
HABPROSOC =~ ComVrb + ComAfec + ConsCl
# Regresiones
ACTAGR ~ EDUBASICA + HORASTRABAJO + CONG_CD + CONG_EF + SININFOTRF
STRESS ~ JOVEN + HORASTRABAJO + HPICO  + SININFOTRF
AMBLABOR ~  ADULTO + CONG_CD + ACTAGR + STRESS
CONDSEG ~ EDUBASICA  + STRESS
HABPROSOC ~ JOVEN + ADULTO + HORASTRABAJO  + CONG_CD + CONG_EF + SININFOTRF
# Varianzas - Covarianzas
ACTAGR ~~ STRESS
FRbr ~~ AFrSem
CulFr ~~ ComVrb
# Interceptos"
# Interceptos"
fit11 <- lavaan::cfa(model11, data = DBVL, orthogonal = TRUE, std.lv = TRUE)
summary(fit11, fit.measures=TRUE, standardized = TRUE)
semPaths(fit11,"std", title = FALSE, curvePivot = TRUE)
# Solicitar los 10 primeros IM con valores m?s altos
modindices(fit11, sort = TRUE, maximum.number = 10)
fit11_1 <- cfa(model11, data = DBVL, orthogonal = TRUE)
summary(fit11_1, fit.measures= TRUE, standardized = TRUE)
semPaths(fit11_1, what = "std", style = "mx", title = FALSE, curvePivot = TRUE)
#parameterestimates(fit11)
modindices(fit11_1, sort = TRUE, maximum.number = 10)
sink()
sink("ResulMODELO_12.txt")
model12 <- " #Variables Latentes
ACTAGR =~ FRbr + EnfCond + AFrSem + CulFr + OmLmVel + IgPare
STRESS =~ Ans + ComAfec + StrC + ConsCl + UsDirec + CulFr
AMBLABOR =~ PrPers + AmbT + ConsCl
CONDSEG =~  CinSeg + UsDirec + Ans
HABPROSOC =~ ComVrb + ComAfec + ConsCl
# Regresiones
ACTAGR ~ EDUBASICA + HORASTRABAJO + CONG_CD + CONG_EF + SININFOTRF
STRESS ~ JOVEN + HORASTRABAJO + HPICO  + SININFOTRF
AMBLABOR ~  ADULTO + CONG_CD + ACTAGR + STRESS
CONDSEG ~ EDUBASICA  + STRESS
HABPROSOC ~ JOVEN + ADULTO + HORASTRABAJO  + CONG_CD + CONG_EF + SININFOTRF + AMBLABOR
# Varianzas - Covarianzas
ACTAGR ~~ STRESS
FRbr ~~ AFrSem
CulFr ~~ ComVrb
Ans ~~ ComAfec
# Interceptos"
fit12 <- lavaan::cfa(model12, data = DBVL, orthogonal = TRUE, std.lv = TRUE)
summary(fit12, fit.measures=TRUE, standardized = TRUE)
semPaths(fit12,"std", title = FALSE, curvePivot = TRUE)
# Solicitar los 10 primeros IM con valores m?s altos
modindices(fit12, sort = TRUE, maximum.number = 10)
fit12_1 <- cfa(model12, data = DBVL, orthogonal = TRUE)
summary(fit12_1, fit.measures= TRUE, standardized = TRUE)
semPaths(fit12_1, what = "std", style = "mx", title = FALSE, curvePivot = TRUE)
#parameterestimates(fit11)
modindices(fit12_1, sort = TRUE, maximum.number = 10)
sink()
View(DBModeloLogitVL1)
#Creacion de la base de datos para el modelo logit multivariado
write.table(DBVL,
file="/Users/williz/Desktop/ModelosED/Database/DBModeloLogitVL1.csv", sep="\t", dec=".")
names(DBVL)
View(DBVL)
# Cargar Datos desde MAC
DBVL <- readRDS("/Users/williz/Desktop/ModelosED/Database/DBModeloLogitVL.rds")
names(DBVL)
View(DBVL)
DBVL$JOVEN <- (ifelse((DBVL$EDAD == 1), 1,0))
DBVL$ADULTO <- (ifelse((DBVL$EDAD == 2 | DBVL$EDAD == 3),1,0))
DBVL$MAYOR_60 <- (ifelse((DBVL$EDAD == 4),1,0))
# NIVEL EDUCATIVO EDUBASICA - EDUSUP
DBVL$EDUBASICA <- (ifelse((DBVL$NIVELEDUCATIVO == 1 | DBVL$NIVELEDUCATIVO == 4), 1,0))
DBVL$EDUSUP <- (ifelse((DBVL$NIVELEDUCATIVO == 2 | DBVL$NIVELEDUCATIVO == 3),1,0))
# HORA DEL RECORRIDO HPICO - HVALLE
DBVL$HPICO <- (ifelse((DBVL$HPICOHVALLE == 1), 1,0))
DBVL$HVALLE <- (ifelse((DBVL$HPICOHVALLE == 2), 1,0))
# CONDICIONES CLIMATICAS CSECO - CLLUVIA
DBVL$CSECO <- (ifelse((DBVL$CLIMA == 1),1,0))
DBVL$CLLUVIA <- (ifelse((DBVL$CLIMA == 2),1,0))
# NIVEL DE CONGESTION
DBVL$CONG_AB <- (ifelse((DBVL$CONGESTION == 1 | DBVL$CONGESTION == 2), 1,0))
DBVL$CONG_CD <- (ifelse((DBVL$CONGESTION == 3 | DBVL$CONGESTION == 4), 1,0))
DBVL$CONG_EF <- (ifelse((DBVL$CONGESTION == 5 | DBVL$CONGESTION == 6), 1,0))
# INFORMACION TRAFICO DE LA CIUDAD
DBVL$SININFOTRF <- (ifelse((DBVL$INFOTRAFICO == 1),1,0))
DBVL$CONINFOTRF <- (ifelse((DBVL$INFOTRAFICO == 2),1,0))
head(DBVL)
# ?Quiero orden!
tibble::as_tibble(DBVL)
names(DBVL)
dplyr::glimpse(DBVL)
summary(DBVL)
#Renombrar las Variables
DBVL <- rename(DBVL, replace =c(ComunicVerbal = "ComVrb",
Ansiedad = "Ans",
ComunicAfectiva = "ComAfec",
PresPersonal = "PrPers",
AmbTrabajo = "AmbT",
StressAlCond = "StrC",
ConsidCliente = "ConsCl",
CinturonDeSeguridad = "CinSeg",
FrenoRapidoBrusco = "FRbr",
UsaDireccionales = "UsDirec",
EnfadoConOtroConductor = "EnfCond",
AceleraFrenaBruscamenteSemaforo = "AFrSem",
CulebreaConFrecuencia = "CulFr",
OmiteLimiteVelocidad = "OmLmVel",
IgnoraSenhalPare = "IgPare",
UsoCelular = "UsCel"))
View(DBVL)
#Consideracion con el Cliente
if (DBVL$ConsCl == 1 | DBVL$ConsCl == 2){
DBVL$ConsCl == 1
} else if (DBVL$ConsCl == 3 | DBVL$ConsCl == 4){
DBVL$ConsCl == 2
} else if (DBVL$ConsCl == 5 | DBVL$ConsCl == 6){
DBVL$ConsCl == 3
} else if (DBVL$ConsCl == 7 | DBVL$ConsCl == 8){
DBVL$ConsCl == 4
} else if (DBVL$ConsCl == 9 | DBVL$ConsCl == 10){
DBVL$ConsCl == 5
}
View(DBVL)
DBVL %>%
mutate(
StrC = factor(StrC,
levels = 1:2, 3:4, 5:6,7:8, 9:10,
labels = c(1,2,3,4,5))
%>%
#Consideracion con el Cliente
DBVL %>%
mutate(
StrC = factor(StrC,
levels = 1:2, 3:4, 5:6,7:8, 9:10,
labels = c(1,2,3,4,5))
) %>%
)
#Consideracion con el Cliente
DBVL %>%
mutate(
StrC = factor(StrC,
levels = 1:2, 3:4, 5:6,7:8, 9:10,
labels = c(1,2,3,4,5))
)
#Consideracion con el Cliente
DBVL %>%
mutate(
StrC = factor(StrC,
levels = (1:2), (3:4), (5:6), (7:8), (9:10),
labels = c(1,2,3,4,5))
)
#Consideracion con el Cliente
DBVL %>%
mutate(
StrC = factor(StrC,
levels = (1,2), (3,4), (5,6), (7,8), (9,10),
labels = c(1,2,3,4,5))
)
#Consideracion con el Cliente
DBVL %>%
mutate(
StrC = factor(StrC,
levels = 1:10,
labels = c("1","2","3","4","5"))
)
tribble(DBVL)
tibble::as_tibble(DBVL)
summary(DBVL$OmLmVel)
