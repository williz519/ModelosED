ACTAGRE ~~ VIONORM
# Interceptos "
fit3 <- lavaan::cfa(model3, data = DB, orthogonal = TRUE, std.lv = TRUE)
summary(fit3, fit.measures=TRUE, standardized = TRUE)
semPaths(fit3,"std", title = FALSE, curvePivot = TRUE)
modindices(fit3, sort = TRUE, maximum.number = 10)
modindices(fit3, sort = TRUE, maximum.number = 10)
model1 <- " #Variables Latentes
ACTAGRE =~ FrenoRapidoBrusco + AceleraFrenaBruscamenteSemaforo +CulebreaConFrecuencia
VIONORM =~  OmiteLimiteVelocidad + IgnoraSenhalPare + UsaDireccionales
AMBLABORAL =~ PresPersonal + AmbTrabajo + ConsidCliente
STRESS =~ Ansiedad + StressAlCond
HABPROSOC =~ ComunicVerbal + ComunicAfectiva
# Regresiones
ACTAGRE + VIONORM + AMBLABORAL + STRESS + HABPROSOC ~ EDUBASICA +
EDUSUP + MENOR_60 + TIEMPO_PROFESION + HORASTRABAJO
# Interceptos
fit1 <- lavaan::cfa(model1, data = DB, orthogonal = TRUE, std.lv = TRUE)
summary(fit1, fit.measures=TRUE, standardized = TRUE)
semPaths(fit1,"std", title = FALSE, curvePivot = TRUE)
model1 <- " #Variables Latentes
ACTAGRE =~ FrenoRapidoBrusco + AceleraFrenaBruscamenteSemaforo +CulebreaConFrecuencia
VIONORM =~  OmiteLimiteVelocidad + IgnoraSenhalPare + UsaDireccionales
AMBLABORAL =~ PresPersonal + AmbTrabajo + ConsidCliente
STRESS =~ Ansiedad + StressAlCond
HABPROSOC =~ ComunicVerbal + ComunicAfectiva
# Regresiones
ACTAGRE + VIONORM + AMBLABORAL + STRESS + HABPROSOC ~ EDUBASICA +
EDUSUP + MENOR_60 + TIEMPO_PROFESION + HORASTRABAJO
# Interceptos"
fit1 <- lavaan::cfa(model1, data = DB, orthogonal = TRUE, std.lv = TRUE)
summary(fit1, fit.measures=TRUE, standardized = TRUE)
semPaths(fit1,"std", title = FALSE, curvePivot = TRUE)
modindices(fit1, sort = TRUE, maximum.number = 10)
model2 <- " #Variables Latentes
ACTAGRE =~ FrenoRapidoBrusco + AceleraFrenaBruscamenteSemaforo + CulebreaConFrecuencia
VIONORM =~  OmiteLimiteVelocidad + IgnoraSenhalPare + UsaDireccionales
AMBLABORAL =~ PresPersonal + AmbTrabajo + ConsidCliente
STRESS =~ Ansiedad + StressAlCond
HABPROSOC =~ ComunicVerbal + ComunicAfectiva
# Regresiones
ACTAGRE + VIONORM + AMBLABORAL + STRESS + HABPROSOC ~ EDUBASICA +
EDUSUP + MENOR_60 + TIEMPO_PROFESION + HORASTRABAJO
# Varianzas y Covarianzas
STRESS~~HABPROSOC
# Interceptos "
fit2 <- lavaan::cfa(model2, data = DB, orthogonal = TRUE, std.lv = TRUE)
summary(fit1, fit.measures=TRUE, standardized = TRUE)
semPaths(fit2,"std", title = FALSE, curvePivot = TRUE)
modindices(fit2, sort = TRUE, maximum.number = 10)
model3 <- " #Variables Latentes
ACTAGRE =~ FrenoRapidoBrusco + AceleraFrenaBruscamenteSemaforo + CulebreaConFrecuencia
VIONORM =~  OmiteLimiteVelocidad + IgnoraSenhalPare + UsaDireccionales
AMBLABORAL =~ PresPersonal + AmbTrabajo + ConsidCliente
STRESS =~ Ansiedad + StressAlCond
HABPROSOC =~ ComunicVerbal + ComunicAfectiva
# Regresiones
ACTAGRE + VIONORM + AMBLABORAL + STRESS + HABPROSOC ~ EDUBASICA +
EDUSUP + MENOR_60 + TIEMPO_PROFESION + HORASTRABAJO
# Varianzas y Covarianzas
STRESS~~HABPROSOC
ACTAGRE ~~VIONORM
# Interceptos "
fit3 <- lavaan::cfa(model3, data = DB, orthogonal = TRUE, std.lv = TRUE)
summary(fit3, fit.measures=TRUE, standardized = TRUE)
semPaths(fit3,"std", title = FALSE, curvePivot = TRUE)
modindices(fit3, sort = TRUE, maximum.number = 10)
fit_index <- broom::glance(fit1) %>%
select(chisq, npar, cfi, tli, rmsea, rmsea.conf.high, srmr, aic, bic, estimator)
fit_index02 <- broom::glance(fit2) %>%
select(chisq, npar, cfi, tli, rmsea, rmsea.conf.high, srmr, aic, bic, estimator)
fit_index03 <- broom::glance(fit3) %>%
select(chisq, npar, cfi, tli, rmsea, rmsea.conf.high, srmr, aic, bic, estimator)
bind_rows(fit_index, fit_index02, fit_index03, .id = "Modelo")
modindices(fit3, sort = TRUE, maximum.number = 10)
model4 <- " #Variables Latentes
ACTAGRE =~ FrenoRapidoBrusco + AceleraFrenaBruscamenteSemaforo + CulebreaConFrecuencia
VIONORM =~  OmiteLimiteVelocidad + IgnoraSenhalPare + UsaDireccionales
AMBLABORAL =~ PresPersonal + AmbTrabajo + ConsidCliente
STRESS =~ Ansiedad + StressAlCond
HABPROSOC =~ ComunicVerbal + ComunicAfectiva
# Regresiones
ACTAGRE + VIONORM + AMBLABORAL + STRESS + HABPROSOC ~ EDUBASICA +
EDUSUP + MENOR_60 + TIEMPO_PROFESION + HORASTRABAJO
AMBLABORAL~ VIONORM
# Varianzas y Covarianzas
STRESS~~HABPROSOC
ACTAGRE ~~VIONORM
# Interceptos "
fit4 <- lavaan::cfa(model4, data = DB, orthogonal = TRUE, std.lv = TRUE)
summary(fit4, fit.measures=TRUE, standardized = TRUE)
semPaths(fit4,"std", title = FALSE, curvePivot = TRUE)
modindices(fit4, sort = TRUE, maximum.number = 10)
model5 <- " #Variables Latentes
ACTAGRE =~ FrenoRapidoBrusco + AceleraFrenaBruscamenteSemaforo + CulebreaConFrecuencia
VIONORM =~  OmiteLimiteVelocidad + IgnoraSenhalPare + UsaDireccionales
AMBLABORAL =~ PresPersonal + AmbTrabajo + ConsidCliente
STRESS =~ Ansiedad + StressAlCond
HABPROSOC =~ ComunicVerbal + ComunicAfectiva
# Regresiones
ACTAGRE + VIONORM + AMBLABORAL + STRESS + HABPROSOC ~ EDUBASICA +
EDUSUP + MENOR_60 + TIEMPO_PROFESION + HORASTRABAJO
AMBLABORAL~ VIONORM
# Varianzas y Covarianzas
STRESS~~HABPROSOC
ACTAGRE ~~VIONORM
PresPersonal ~~ AmbTrabajo
# Interceptos "
fit5 <- lavaan::cfa(model5, data = DB, orthogonal = TRUE, std.lv = TRUE)
summary(fit5, fit.measures=TRUE, standardized = TRUE)
semPaths(fit5,"std", title = FALSE, curvePivot = TRUE)
modindices(fit5, sort = TRUE, maximum.number = 10)
fit_index04 <- broom::glance(fit4) %>%
select(chisq, npar, cfi, tli, rmsea, rmsea.conf.high, srmr, aic, bic, estimator)
fit_index05 <- broom::glance(fit5) %>%
select(chisq, npar, cfi, tli, rmsea, rmsea.conf.high, srmr, aic, bic, estimator)
bind_rows(fit_index, fit_index02, fit_index03, fit_index04, fit_index05, .id = "Modelo")
modindices(fit5, sort = TRUE, maximum.number = 10)
model1 <- " #Variables Latentes
ACTAGRE =~ FrenoRapidoBrusco + AceleraFrenaBruscamenteSemaforo +CulebreaConFrecuencia
VIONORM =~  OmiteLimiteVelocidad + IgnoraSenhalPare + UsaDireccionales
AMBLABORAL =~ PresPersonal + AmbTrabajo + ConsidCliente
STRESS =~ Ansiedad + StressAlCond
HABPROSOC =~ ComunicVerbal + ComunicAfectiva
# Regresiones
ACTAGRE + VIONORM + AMBLABORAL + STRESS + HABPROSOC ~ EDUBASICA +
EDUSUP + MENOR_60 + TIEMPO_PROFESION + HORASTRABAJO
# Interceptos"
fit1 <- lavaan::cfa(model1, data = DB, orthogonal = TRUE, std.lv = TRUE)
summary(fit1, fit.measures=TRUE, standardized = TRUE)
semPaths(fit1,"std", title = FALSE, curvePivot = TRUE)
semPaths(fit1,"std", title = FALSE, curvePivot = TRUE)
model1 <- " #Variables Latentes
ACTAGRE =~ FrenoRapidoBrusco + AceleraFrenaBruscamenteSemaforo +CulebreaConFrecuencia
VIONORM =~  OmiteLimiteVelocidad + IgnoraSenhalPare + UsaDireccionales
AMBLABORAL =~ PresPersonal + AmbTrabajo + ConsidCliente
STRESS =~ Ansiedad + StressAlCond
HABPROSOC =~ ComunicVerbal + ComunicAfectiva
# Regresiones
ACTAGRE + VIONORM + AMBLABORAL + STRESS + HABPROSOC ~ EDUBASICA +
MENOR_60 + TIEMPO_PROFESION + HORASTRABAJO
# Interceptos"
fit1 <- lavaan::cfa(model1, data = DB, orthogonal = TRUE, std.lv = TRUE)
summary(fit1, fit.measures=TRUE, standardized = TRUE)
semPaths(fit1,"std", title = FALSE, curvePivot = TRUE)
modindices(fit1, sort = TRUE, maximum.number = 10)
model2 <- " #Variables Latentes
ACTAGRE =~ FrenoRapidoBrusco + AceleraFrenaBruscamenteSemaforo +CulebreaConFrecuencia
VIONORM =~  OmiteLimiteVelocidad + IgnoraSenhalPare + UsaDireccionales
AMBLABORAL =~ PresPersonal + AmbTrabajo + ConsidCliente
STRESS =~ Ansiedad + StressAlCond
HABPROSOC =~ ComunicVerbal + ComunicAfectiva
# Regresiones
ACTAGRE + VIONORM + AMBLABORAL + STRESS + HABPROSOC ~ EDUBASICA +
MENOR_60 + TIEMPO_PROFESION + HORASTRABAJO
HABPROSOC~STRESS
#Varianza Covarianzas
STRESS ~~ HABPROSOC
# Interceptos"
fit2 <- lavaan::cfa(model2, data = DB, orthogonal = TRUE, std.lv = TRUE)
summary(fit1, fit.measures=TRUE, standardized = TRUE)
semPaths(fit2,"std", title = FALSE, curvePivot = TRUE)
modindices(fit2, sort = TRUE, maximum.number = 10)
modindices(fit1, sort = TRUE, maximum.number = 10)
model2 <- " #Variables Latentes
ACTAGRE =~ FrenoRapidoBrusco + AceleraFrenaBruscamenteSemaforo +CulebreaConFrecuencia
VIONORM =~  OmiteLimiteVelocidad + IgnoraSenhalPare + UsaDireccionales
AMBLABORAL =~ PresPersonal + AmbTrabajo + ConsidCliente
STRESS =~ Ansiedad + StressAlCond
HABPROSOC =~ ComunicVerbal + ComunicAfectiva
# Regresiones
ACTAGRE + VIONORM + AMBLABORAL + STRESS + HABPROSOC ~ EDUBASICA +
MENOR_60 + TIEMPO_PROFESION + HORASTRABAJO
VIONORM  ~         ACTAGRE
#Varianza Covarianzas
ACTAGRE ~~         VIONORM
# Interceptos"
fit2 <- lavaan::cfa(model2, data = DB, orthogonal = TRUE, std.lv = TRUE)
model2 <- " #Variables Latentes
ACTAGRE =~ FrenoRapidoBrusco + AceleraFrenaBruscamenteSemaforo +CulebreaConFrecuencia
VIONORM =~  OmiteLimiteVelocidad + IgnoraSenhalPare + UsaDireccionales
AMBLABORAL =~ PresPersonal + AmbTrabajo + ConsidCliente
STRESS =~ Ansiedad + StressAlCond
HABPROSOC =~ ComunicVerbal + ComunicAfectiva
# Regresiones
ACTAGRE + VIONORM + AMBLABORAL + STRESS + HABPROSOC ~ EDUBASICA +
MENOR_60 + TIEMPO_PROFESION + HORASTRABAJO
#Varianza Covarianzas
ACTAGRE ~~ VIONORM
# Interceptos"
fit2 <- lavaan::cfa(model2, data = DB, orthogonal = TRUE, std.lv = TRUE)
summary(fit1, fit.measures=TRUE, standardized = TRUE)
semPaths(fit2,"std", title = FALSE, curvePivot = TRUE)
modindices(fit2, sort = TRUE, maximum.number = 10)
model3 <- " #Variables Latentes
ACTAGRE =~ FrenoRapidoBrusco + AceleraFrenaBruscamenteSemaforo +CulebreaConFrecuencia
VIONORM =~  OmiteLimiteVelocidad + IgnoraSenhalPare + UsaDireccionales
AMBLABORAL =~ PresPersonal + AmbTrabajo + ConsidCliente
STRESS =~ Ansiedad + StressAlCond
HABPROSOC =~ ComunicVerbal + ComunicAfectiva
# Regresiones
ACTAGRE + VIONORM + AMBLABORAL + STRESS + HABPROSOC ~ EDUBASICA +
MENOR_60 + TIEMPO_PROFESION + HORASTRABAJO
#Varianza Covarianzas
ACTAGRE ~~ VIONORM
AMBLABORAL ~~ HABPROSOC
# Interceptos"
fit3 <- lavaan::cfa(model3, data = DB, orthogonal = TRUE, std.lv = TRUE)
summary(fit3, fit.measures=TRUE, standardized = TRUE)
semPaths(fit3,"std", title = FALSE, curvePivot = TRUE)
modindices(fit3, sort = TRUE, maximum.number = 10)
fit_index <- broom::glance(fit1) %>%
select(chisq, npar, cfi, tli, rmsea, rmsea.conf.high, srmr, aic, bic, estimator)
fit_index02 <- broom::glance(fit2) %>%
select(chisq, npar, cfi, tli, rmsea, rmsea.conf.high, srmr, aic, bic, estimator)
fit_index03 <- broom::glance(fit3) %>%
select(chisq, npar, cfi, tli, rmsea, rmsea.conf.high, srmr, aic, bic, estimator)
bind_rows(fit_index, fit_index02, fit_index03, .id = "Modelo")
model4 <- " #Variables Latentes
ACTAGRE =~ FrenoRapidoBrusco + AceleraFrenaBruscamenteSemaforo +CulebreaConFrecuencia
VIONORM =~  OmiteLimiteVelocidad + IgnoraSenhalPare + UsaDireccionales
AMBLABORAL =~ PresPersonal + AmbTrabajo + ConsidCliente
STRESS =~ Ansiedad + StressAlCond
HABPROSOC =~ ComunicVerbal + ComunicAfectiva
# Regresiones
ACTAGRE + VIONORM + AMBLABORAL + STRESS + HABPROSOC ~ EDUBASICA +
MENOR_60 + TIEMPO_PROFESION + HORASTRABAJO
#Varianza Covarianzas
ACTAGRE ~~ VIONORM
AMBLABORAL ~~ HABPROSOC
PresPersonal ~~ AmbTrabajo
# Interceptos"
fit4 <- lavaan::cfa(model4, data = DB, orthogonal = TRUE, std.lv = TRUE)
summary(fit4, fit.measures=TRUE, standardized = TRUE)
semPaths(fit4,"std", title = FALSE, curvePivot = TRUE)
modindices(fit4, sort = TRUE, maximum.number = 10)
model5 <- " #Variables Latentes
ACTAGRE =~ FrenoRapidoBrusco + AceleraFrenaBruscamenteSemaforo +CulebreaConFrecuencia
VIONORM =~  OmiteLimiteVelocidad + IgnoraSenhalPare + UsaDireccionales
AMBLABORAL =~ PresPersonal + AmbTrabajo + ConsidCliente
STRESS =~ Ansiedad + StressAlCond
HABPROSOC =~ ComunicVerbal + ComunicAfectiva
# Regresiones
ACTAGRE + VIONORM + AMBLABORAL + STRESS + HABPROSOC ~ EDUBASICA +
MENOR_60 + TIEMPO_PROFESION + HORASTRABAJO
#Varianza Covarianzas
ACTAGRE ~~ VIONORM
AMBLABORAL ~~ HABPROSOC
PresPersonal ~~ AmbTrabajo
Ansiedad ~~ ComunicAfectiva
# Interceptos"
fit5 <- lavaan::cfa(model5, data = DB, orthogonal = TRUE, std.lv = TRUE)
summary(fit5, fit.measures=TRUE, standardized = TRUE)
semPaths(fit5,"std", title = FALSE, curvePivot = TRUE)
modindices(fit5, sort = TRUE, maximum.number = 10)
fit_index04 <- broom::glance(fit4) %>%
select(chisq, npar, cfi, tli, rmsea, rmsea.conf.high, srmr, aic, bic, estimator)
fit_index05 <- broom::glance(fit5) %>%
select(chisq, npar, cfi, tli, rmsea, rmsea.conf.high, srmr, aic, bic, estimator)
bind_rows(fit_index, fit_index02, fit_index03, fit_index04, fit_index05, .id = "Modelo")
modindices(fit5, sort = TRUE, maximum.number = 10)
model6 <- " #Variables Latentes
ACTAGRE =~ FrenoRapidoBrusco + AceleraFrenaBruscamenteSemaforo +CulebreaConFrecuencia
VIONORM =~  OmiteLimiteVelocidad + IgnoraSenhalPare + UsaDireccionales
AMBLABORAL =~ PresPersonal + AmbTrabajo + ConsidCliente
STRESS =~ Ansiedad + StressAlCond
HABPROSOC =~ ComunicVerbal + ComunicAfectiva
# Regresiones
ACTAGRE + VIONORM + AMBLABORAL + STRESS + HABPROSOC ~ EDUBASICA +
MENOR_60 + TIEMPO_PROFESION + HORASTRABAJO
#Varianza Covarianzas
ACTAGRE ~~ VIONORM
AMBLABORAL ~~ HABPROSOC
PresPersonal ~~ AmbTrabajo
Ansiedad ~~ ComunicAfectiva
AMBLABORAL ~~       STRESS
# Interceptos"
fit6 <- lavaan::cfa(model6, data = DB, orthogonal = TRUE, std.lv = TRUE)
summary(fit6, fit.measures=TRUE, standardized = TRUE)
semPaths(fit6,"std", title = FALSE, curvePivot = TRUE)
modindices(fit6, sort = TRUE, maximum.number = 10)
model6 <- " #Variables Latentes
ACTAGRE =~ FrenoRapidoBrusco + AceleraFrenaBruscamenteSemaforo +CulebreaConFrecuencia
VIONORM =~  OmiteLimiteVelocidad + IgnoraSenhalPare + UsaDireccionales
AMBLABORAL =~ PresPersonal + AmbTrabajo + ConsidCliente
STRESS =~ Ansiedad + StressAlCond
HABPROSOC =~ ComunicVerbal + ComunicAfectiva
# Regresiones
ACTAGRE + VIONORM + AMBLABORAL + STRESS + HABPROSOC ~ EDUBASICA +
MENOR_60 + TIEMPO_PROFESION + HORASTRABAJO
#Varianza Covarianzas
ACTAGRE ~~ VIONORM
AMBLABORAL ~~ HABPROSOC
PresPersonal ~~ AmbTrabajo
Ansiedad ~~ ComunicAfectiva
AMBLABORAL ~~STRESS
# Interceptos"
fit6 <- lavaan::cfa(model6, data = DB, orthogonal = TRUE, std.lv = TRUE)
summary(fit6, fit.measures=TRUE, standardized = TRUE)
semPaths(fit6,"std", title = FALSE, curvePivot = TRUE)
modindices(fit6, sort = TRUE, maximum.number = 10)
model6 <- " #Variables Latentes
ACTAGRE =~ FrenoRapidoBrusco + AceleraFrenaBruscamenteSemaforo +CulebreaConFrecuencia
VIONORM =~  OmiteLimiteVelocidad + IgnoraSenhalPare + UsaDireccionales
AMBLABORAL =~ PresPersonal + AmbTrabajo + ConsidCliente
STRESS =~ Ansiedad + StressAlCond
HABPROSOC =~ ComunicVerbal + ComunicAfectiva
# Regresiones
ACTAGRE + VIONORM + AMBLABORAL + STRESS + HABPROSOC ~ EDUBASICA +
MENOR_60 + TIEMPO_PROFESION + HORASTRABAJO
#Varianza Covarianzas
ACTAGRE ~~ VIONORM
AMBLABORAL ~~ HABPROSOC
PresPersonal ~~ AmbTrabajo
Ansiedad ~~ ComunicAfectiva
AMBLABORAL ~~STRESS
Ansiedad ~~ StressAlCond
# Interceptos"
fit6 <- lavaan::cfa(model6, data = DB, orthogonal = TRUE, std.lv = TRUE)
summary(fit6, fit.measures=TRUE, standardized = TRUE)
semPaths(fit6,"std", title = FALSE, curvePivot = TRUE)
modindices(fit6, sort = TRUE, maximum.number = 10)
fit_index06 <- broom::glance(fit6) %>%
select(chisq, npar, cfi, tli, rmsea, rmsea.conf.high, srmr, aic, bic, estimator)
bind_rows(fit_index, fit_index02, fit_index03, fit_index04, fit_index05, fit_index06, .id = "Modelo")
parameterEstimates(fit1, standardized = TRUE, ci = FALSE)
library(lavaan)
parameterEstimates(fit1, standardized = TRUE, ci = FALSE)
install.packages("R.matlab")
library(R.matlab)
Matlab$startServer()
matlab <- Matlab()
isOpen <- open(matlab)
install.packages("matlabr")
run_matlab_script(C:\Users\sin definir\Downloads\ypea103-ant-colony-optimization (1)\YPEA103 Ant Colony Optimization\01 ACO for TSP\aco.m, verbose = TRUE, desktop = FALSE,
splash = FALSE, display = FALSE, wait = TRUE,
single_thread = FALSE)
install.packages("matlabr")
library(matlabr)
run_matlab_script(C:\Users\sin definir\Downloads\ypea103-ant-colony-optimization (1)\YPEA103 Ant Colony Optimization\01 ACO for TSP\aco.m, verbose = TRUE, desktop = FALSE,
splash = FALSE, display = FALSE, wait = TRUE,
single_thread = FALSE)
run_matlab_script(aco.m, verbose = TRUE, desktop = FALSE,
splash = FALSE, display = FALSE, wait = TRUE,
single_thread = FALSE)
run_matlab_script(C:\Users\sin definir\Downloads\ypea103-ant-colony-optimization (1)\YPEA103 Ant Colony Optimization\01 ACO for TSP\aco.m, verbose = TRUE, desktop = FALSE)
run_matlab_script(C:/Users/sin definir/Downloads/ypea103-ant-colony-optimization (1)/YPEA103 Ant Colony Optimization/01 ACO for TSP/aco.m, verbose = TRUE, desktop = FALSE)
run_matlab_script(C:/Users/sin definir/Downloads/ypea103-ant-colony-optimization (1)/YPEA103 Ant Colony Optimization/01 ACO for TSP/aco.m, verbose = TRUE, desktop = FALSE)
run_matlab_script(C:\Users\sin definir\Downloads\ypea103-ant-colony-optimization (1)\YPEA103 Ant Colony Optimization\01 ACO for TSP\aco.m, verbose = TRUE, desktop = FALSE)
run_matlab_script(aco.m, verbose = TRUE, desktop = FALSE)
run_matlab_script(/Users/sin definir/Downloads/ypea103-ant-colony-optimization (1)/YPEA103 Ant Colony Optimization/01 ACO for TSP/aco.m, verbose = TRUE, desktop = FALSE)
run_matlab_script("/Users/sin definir/Downloads/ypea103-ant-colony-optimization (1)/YPEA103 Ant Colony Optimization/01 ACO for TSP/aco.m", verbose = TRUE, desktop = FALSE)
run_matlab_script("/Users/sin definir/Downloads/ypea103-ant-colony-optimization (1)/YPEA103 Ant Colony Optimization/01 ACO for TSP/aco.m", verbose = TRUE, desktop = FALSE)
shiny::runApp('C:/Users/sin definir/Desktop/Shinny')
runApp('C:/Users/sin definir/Desktop/Shinny')
runApp('C:/Users/sin definir/Desktop/Shinny')
runApp('C:/Users/sin definir/Desktop/Shinny')
runApp('C:/Users/sin definir/Desktop/Shinny')
runApp('C:/Users/sin definir/Desktop/Shinny')
library(tidyverse)
library(tidyverse)
library(readxl)
library(lubridate)
library(sf)
library(leaflet)
library(RColorBrewer)
# Leer la DB
DB_file <- "CamFotomultas.xlsx"
DB <- DB_file %>%
excel_sheets() %>%
set_names() %>%
map(read_xlsx, path = DB_file)
# Ubicación Camaras
Camaras <- DB$Hoja1 %>%
separate(Direccion,
c("Ub1", "Ub2"),
sep = " - ", extra = "merge") %>%
arrange(Ub1) %>%
mutate(Cod = 1:n()) %>%
st_as_sf(coords = c("Point_X",
"Point_X")) %>%
st_set_crs(4326)
# Guardar los datos para alimentar la WebApp
saveRDS(Camaras, file.path("Camaras.rds"))
DB_file <- "CamFotomultas.xlsx"
DB <- DB_file %>%
excel_sheets() %>%
set_names() %>%
map(read_xlsx, path = DB_file)
library(tidyverse)
library(readxl)
library(lubridate)
library(sf)
library(leaflet)
library(RColorBrewer)
DB_file <- "CamFotomultas.xlsx"
DB <- DB_file %>%
excel_sheets() %>%
set_names() %>%
map(read_xlsx, path = DB_file)
DB_file <- "CamFotomultas.xlsx"
DB <- DB_file %>%
excel_sheets() %>%
set_names() %>%
map(read_xlsx, path = DB_file)
DB <- DB_file %>%
excel_sheets() %>%
set_names() %>%
map(read_xlsx, path = DB_file)
Camaras <- DB$Hoja1 %>%
separate(Direccion,
c("Ub1", "Ub2"),
sep = " - ", extra = "merge") %>%
arrange(Ub1) %>%
mutate(Cod = 1:n()) %>%
st_as_sf(coords = c("Point_X",
"Point_X")) %>%
st_set_crs(4326)
DB <- DB_file %>%
excel_sheets() %>%
set_names() %>%
map(read_xlsx, path = DB_file)
DB_file <- "DB_Viajes.xlsx"
DB <- DB_file %>%
excel_sheets() %>%
set_names() %>%
map(read_xlsx, path = DB_file)
Ubicacion <- DB$Ubicacion %>%
separate(Nombre,
c("Nombre", "Zona"),
sep = " - Zona ") %>%
arrange(Nombre) %>%
mutate(Cod = 1:n()) %>%
st_as_sf(coords = c("Longitud",
"Latitud")) %>%
st_set_crs(4326)
rm(list = ls())
library(apollo)
install.packages("apollo")
library(apollo)
apollo_initialise()
apollo_control = list(
modelName  ="Apollo_example_1",
modelDescr ="Simple MNL model on mode choice RP data",
indivID    ="ID"
)
database = read.csv("apollo_modeChoiceData.csv",header=TRUE)
database = read.csv("apollo_modeChoiceData.csv",header=TRUE)
database = read.csv("apollo_modeChoiceData.csv",header=TRUE)
database = read.csv("\Users\sin definir\Desktop\ModelosED\ModelosED\MED en R\apollo_modeChoiceData.csv",header=TRUE)
getwd()
setwd("C:\Users\sin definir\Desktop\ModelosED\ModelosED\MED en R")
setwd("Users\sin definir\Desktop\ModelosED\ModelosED\MED en R")
setwd("C:/Users/sin definir/Desktop/ModelosED/ModelosED/MED en R")
getwd()
database = read.csv("apollo_modeChoiceData.csv",header=TRUE)
View(database)
View(database)
View(database)
View(database)
database = subset(database,database$RP==1)
database$mean_income = mean(database$income)
choiceAnalysis_settings <- list(
alternatives = c(car=1, bus=2, air=3, rail=4),
avail        = list(car=database$av_car, bus=database$av_bus, air=database$av_air, rail=database$av_rail),
choiceVar    = database$choice,
explanators  = database[,c("female","business","income")]
)
apollo_choiceAnalysis(choiceAnalysis_settings, apollo_control, database)
apollo_beta=c(asc_car   = 0,
asc_bus   = 0,
asc_air   = 0,
asc_rail  = 0,
b_tt_car  = 0,
b_tt_bus  = 0,
b_tt_air  = 0,
b_tt_rail = 0,
b_access  = 0,
b_cost    = 0)
apollo_fixed = c("asc_car")
apollo_inputs = apollo_validateInputs()
apollo_probabilities=function(apollo_beta, apollo_inputs, functionality="estimate"){
### Attach inputs and detach after function exit
apollo_attach(apollo_beta, apollo_inputs)
on.exit(apollo_detach(apollo_beta, apollo_inputs))
### Create list of probabilities P
P = list()
### List of utilities: these must use the same names as in mnl_settings, order is irrelevant
V = list()
V[['car']]  = asc_car  + b_tt_car  * time_car                        + b_cost * cost_car
V[['bus']]  = asc_bus  + b_tt_bus  * time_bus  + b_access * access_bus  + b_cost * cost_bus
V[['air']]  = asc_air  + b_tt_air  * time_air  + b_access * access_air  + b_cost * cost_air
V[['rail']] = asc_rail + b_tt_rail * time_rail + b_access * access_rail + b_cost * cost_rail
### Define settings for MNL model component
mnl_settings = list(
alternatives  = c(car=1, bus=2, air=3, rail=4),
avail         = list(car=av_car, bus=av_bus, air=av_air, rail=av_rail),
choiceVar     = choice,
V             = V
)
### Compute probabilities using MNL model
P[['model']] = apollo_mnl(mnl_settings, functionality)
### Take product across observation for same individual
P = apollo_panelProd(P, apollo_inputs, functionality)
### Prepare and return outputs of function
P = apollo_prepareProb(P, apollo_inputs, functionality)
return(P)
}
model = apollo_estimate(apollo_beta, apollo_fixed, apollo_probabilities, apollo_inputs)
apollo_modelOutput(model)
apollo_saveOutput(model)
View(database)
