model1_6 <- " #Variables Latentes
FA_1 =~ FRbr + EnfCond + AFrSem + CulFr
FA_2 =~ OmLmVel + IgPare + UsoCel + UsoPito
FA_3 =~ PasoPeaton + UsoDirec + UsoCel
FA_4 =~ UsoPito + EnfCond
# Regresiones
FA_1 ~  EXP_2 + HTRB_2 + USODISPMOB
FA_2 ~ ADULTO40 + EXP_1 + EXP_3 + HPICO  + CSECO + SININFOTRF +  USODISPMOB + FA_1
FA_3 ~ EDUBASICA + HTRB_2 + HTRB_3 +  USODISPMOB
FA_4 ~ JOVEN30 + ADULTO40 + ADULTO60 +  EXP_3 + FA_1
# Interceptos "
fit1_6 <- cfa(model1_6, data = MCond, orthogonal = TRUE)
summary(fit1_6, fit.measures= TRUE, standardized = TRUE)
#semPaths(fit1_4, what = "std", style = "mx", title = FALSE, curvePivot = TRUE)
#parameterestimates(fit11)
modindices(fit1_6, sort = TRUE, maximum.number = 10)
model1_0 <- " #Variables Latentes
FA_1 =~ FRbr + EnfCond + AFrSem + CulFr
FA_2 =~ OmLmVel + IgPare
FA_3 =~ PasoPeaton + UsoDirec + UsoCel
FA_4 =~ UsoPito
# Regresiones
FA_1 ~ EDUBASICA + JOVEN30 + ADULTO40 + ADULTO60 + EXP_1 + EXP_2 + EXP_3 +  HTRB_2 + HTRB_3 + HPICO  + CSECO +
SININFOTRF  + USODISPMOB
FA_2 ~ EDUBASICA + JOVEN30 + ADULTO40 + ADULTO60 + EXP_1 + EXP_2 + EXP_3 +
HTRB_2 + HTRB_3 + HPICO  + CSECO +
SININFOTRF  + USODISPMOB
FA_3 ~ EDUBASICA + JOVEN30 + ADULTO40 + ADULTO60 + EXP_1 + EXP_2 + EXP_3 +
HTRB_2 + HTRB_3 + HPICO  + CSECO +
SININFOTRF  + USODISPMOB
FA_4 ~ EDUBASICA + JOVEN30 + ADULTO40 + ADULTO60 + EXP_1 + EXP_2 + EXP_3 +
HTRB_2 + HTRB_3 + HPICO  + CSECO +
SININFOTRF  + USODISPMOB
# Interceptos "
fit1_0 <- cfa(model1_0, data = MCond, orthogonal = TRUE)
summary(fit1_0, fit.measures= TRUE, standardized = TRUE)
semPaths(fit1_0, what = "std", style = "mx", title = FALSE, curvePivot = TRUE)
#parameterestimates(fit11)
modindices(fit1_0, sort = TRUE, maximum.number = 10)
model1_1 <- " #Variables Latentes
FA_1 =~ FRbr + EnfCond + AFrSem + CulFr
FA_2 =~ OmLmVel + IgPare
FA_3 =~ PasoPeaton + UsoDirec + UsoCel
FA_4 =~ UsoPito
# Regresiones
FA_1 ~ EDUBASICA + JOVEN30 + ADULTO40 + ADULTO60 + EXP_1 + EXP_2 + EXP_3 +  HTRB_2 + HTRB_3 + HPICO  + CSECO +
SININFOTRF  + USODISPMOB
FA_2 ~ EDUBASICA + JOVEN30 + ADULTO40 + ADULTO60 + EXP_1 + EXP_2 + EXP_3 +
HTRB_2 + HTRB_3 + HPICO  + CSECO +
SININFOTRF  + USODISPMOB + FA_1
FA_3 ~ EDUBASICA + JOVEN30 + ADULTO40 + ADULTO60 + EXP_1 + EXP_2 + EXP_3 +
HTRB_2 + HTRB_3 + HPICO  + CSECO +
SININFOTRF  + USODISPMOB
FA_4 ~ EDUBASICA + JOVEN30 + ADULTO40 + ADULTO60 + EXP_1 + EXP_2 + EXP_3 +
HTRB_2 + HTRB_3 + HPICO  + CSECO +
SININFOTRF  + USODISPMOB
# Interceptos "
fit1_1 <- cfa(model1_1, data = MCond, orthogonal = TRUE)
summary(fit1_1, fit.measures= TRUE, standardized = TRUE)
#semPaths(fit1_1, what = "std", style = "mx", title = FALSE, curvePivot = TRUE)
#parameterestimates(fit11)
modindices(fit1_1, sort = TRUE, maximum.number = 10)
model1_2 <- " #Variables Latentes
FA_1 =~ FRbr + EnfCond + AFrSem + CulFr
FA_2 =~ OmLmVel + IgPare
FA_3 =~ PasoPeaton + UsoDirec + UsoCel
FA_4 =~ UsoPito
# Regresiones
FA_1 ~ EDUBASICA + JOVEN30 + ADULTO40 + ADULTO60 + EXP_1 + EXP_2 + EXP_3 +  HTRB_2 + HTRB_3 + HPICO  + CSECO +
SININFOTRF +  USODISPMOB
FA_2 ~ EDUBASICA + JOVEN30 + ADULTO40 + ADULTO60 + EXP_1 + EXP_2 + EXP_3 +
HTRB_2 + HTRB_3 + HPICO  + CSECO +
SININFOTRF +  USODISPMOB + FA_1
FA_3 ~ EDUBASICA + JOVEN30 + ADULTO40 + ADULTO60 + EXP_1 + EXP_2 + EXP_3 +
HTRB_2 + HTRB_3 + HPICO  + CSECO +
SININFOTRF + USODISPMOB
FA_4 ~ EDUBASICA + JOVEN30 + ADULTO40 + ADULTO60 + EXP_1 + EXP_2 + EXP_3 +
HTRB_2 + HTRB_3 + HPICO  + CSECO +
SININFOTRF  + USODISPMOB + FA_1
# Interceptos "
fit1_2 <- cfa(model1_2, data = MCond, orthogonal = TRUE)
summary(fit1_2, fit.measures= TRUE, standardized = TRUE)
#semPaths(fit1_2, what = "std", style = "mx", title = FALSE, curvePivot = TRUE)
#parameterestimates(fit11)
modindices(fit1_2, sort = TRUE, maximum.number = 10)
model1_3 <- " #Variables Latentes
FA_1 =~ FRbr + EnfCond + AFrSem + CulFr
FA_2 =~ OmLmVel + IgPare + UsoCel
FA_3 =~ PasoPeaton + UsoDirec + UsoCel
FA_4 =~ UsoPito
# Regresiones
FA_1 ~ EDUBASICA + JOVEN30 + ADULTO40 + ADULTO60 + EXP_1 + EXP_2 + EXP_3 +  HTRB_2 + HTRB_3 + HPICO  + CSECO +
SININFOTRF +  USODISPMOB
FA_2 ~ EDUBASICA + JOVEN30 + ADULTO40 + ADULTO60 + EXP_1 + EXP_2 + EXP_3 +
HTRB_2 + HTRB_3 + HPICO  + CSECO +
SININFOTRF +  USODISPMOB + FA_1
FA_3 ~ EDUBASICA + JOVEN30 + ADULTO40 + ADULTO60 + EXP_1 + EXP_2 + EXP_3 +
HTRB_2 + HTRB_3 + HPICO  + CSECO +
SININFOTRF + USODISPMOB
FA_4 ~ EDUBASICA + JOVEN30 + ADULTO40 + ADULTO60 + EXP_1 + EXP_2 + EXP_3 +
HTRB_2 + HTRB_3 + HPICO  + CSECO +
SININFOTRF  + USODISPMOB + FA_1
# Interceptos "
fit1_3 <- cfa(model1_3, data = MCond, orthogonal = TRUE)
summary(fit1_3, fit.measures= TRUE, standardized = TRUE)
#semPaths(fit1_3, what = "std", style = "mx", title = FALSE, curvePivot = TRUE)
#parameterestimates(fit11)
modindices(fit1_3, sort = TRUE, maximum.number = 10)
model1_4 <- " #Variables Latentes
FA_1 =~ FRbr + EnfCond + AFrSem + CulFr
FA_2 =~ OmLmVel + IgPare + UsoCel
FA_3 =~ PasoPeaton + UsoDirec + UsoCel
FA_4 =~ UsoPito + EnfCond
# Regresiones
FA_1 ~ EDUBASICA + JOVEN30 + ADULTO40 + ADULTO60 + EXP_1 + EXP_2 + EXP_3 +  HTRB_2 + HTRB_3 + HPICO  + CSECO +
SININFOTRF +  USODISPMOB
FA_2 ~ EDUBASICA + JOVEN30 + ADULTO40 + ADULTO60 + EXP_1 + EXP_2 + EXP_3 +
HTRB_2 + HTRB_3 + HPICO  + CSECO +
SININFOTRF +  USODISPMOB + FA_1
FA_3 ~ EDUBASICA + JOVEN30 + ADULTO40 + ADULTO60 + EXP_1 + EXP_2 + EXP_3 +
HTRB_2 + HTRB_3 + HPICO  + CSECO +
SININFOTRF + USODISPMOB
FA_4 ~ EDUBASICA + JOVEN30 + ADULTO40 + ADULTO60 + EXP_1 + EXP_2 + EXP_3 +
HTRB_2 + HTRB_3 + HPICO  + CSECO +
SININFOTRF  + USODISPMOB + FA_1
# Interceptos "
fit1_4 <- cfa(model1_4, data = MCond, orthogonal = TRUE)
summary(fit1_4, fit.measures= TRUE, standardized = TRUE)
#semPaths(fit1_4, what = "std", style = "mx", title = FALSE, curvePivot = TRUE)
#parameterestimates(fit11)
modindices(fit1_4, sort = TRUE, maximum.number = 10)
model1_5 <- " #Variables Latentes
FA_1 =~ FRbr + EnfCond + AFrSem + CulFr
FA_2 =~ OmLmVel + IgPare + UsoCel + UsoPito
FA_3 =~ PasoPeaton + UsoDirec + UsoCel
FA_4 =~ UsoPito + EnfCond
# Regresiones
FA_1 ~ EDUBASICA + JOVEN30 + ADULTO40 + ADULTO60 + EXP_1 + EXP_2 + EXP_3 +  HTRB_2 + HTRB_3 + HPICO  + CSECO +
SININFOTRF +  USODISPMOB
FA_2 ~ EDUBASICA + JOVEN30 + ADULTO40 + ADULTO60 + EXP_1 + EXP_2 + EXP_3 +
HTRB_2 + HTRB_3 + HPICO  + CSECO +
SININFOTRF +  USODISPMOB + FA_1
FA_3 ~ EDUBASICA + JOVEN30 + ADULTO40 + ADULTO60 + EXP_1 + EXP_2 + EXP_3 +
HTRB_2 + HTRB_3 + HPICO  + CSECO +
SININFOTRF + USODISPMOB
FA_4 ~ EDUBASICA + JOVEN30 + ADULTO40 + ADULTO60 + EXP_1 + EXP_2 + EXP_3 +
HTRB_2 + HTRB_3 + HPICO  + CSECO +
SININFOTRF  + USODISPMOB + FA_1
# Interceptos "
fit1_5 <- cfa(model1_5, data = MCond, orthogonal = TRUE)
summary(fit1_5, fit.measures= TRUE, standardized = TRUE)
#semPaths(fit1_4, what = "std", style = "mx", title = FALSE, curvePivot = TRUE)
#parameterestimates(fit11)
modindices(fit1_5, sort = TRUE, maximum.number = 10)
model1_6 <- " #Variables Latentes
FA_1 =~ FRbr + EnfCond + AFrSem + CulFr
FA_2 =~ OmLmVel + IgPare + UsoCel + UsoPito
FA_3 =~ PasoPeaton + UsoDirec + UsoCel
FA_4 =~ UsoPito + EnfCond
# Regresiones
FA_1 ~  EXP_2 + HTRB_2 + USODISPMOB
FA_2 ~ ADULTO40 + EXP_1 + EXP_3 + HPICO  + CSECO + SININFOTRF +  USODISPMOB + FA_1
FA_3 ~ EDUBASICA + HTRB_2 + HTRB_3 +  USODISPMOB
FA_4 ~ JOVEN30 + ADULTO40 + ADULTO60 +  EXP_3 + FA_1
# Interceptos "
fit1_6 <- cfa(model1_6, data = MCond, orthogonal = TRUE)
summary(fit1_6, fit.measures= TRUE, standardized = TRUE)
#semPaths(fit1_4, what = "std", style = "mx", title = FALSE, curvePivot = TRUE)
#parameterestimates(fit11)
modindices(fit1_6, sort = TRUE, maximum.number = 10)
model1_5 <- " #Variables Latentes
FA_1 =~ FRbr + EnfCond + AFrSem + CulFr
FA_2 =~ OmLmVel + IgPare + UsoCel + UsoPito
FA_3 =~ PasoPeaton + UsoDirec + UsoCel
FA_4 =~ UsoPito + EnfCond
# Regresiones
FA_1 ~ EDUBASICA + JOVEN30 + ADULTO40 + ADULTO60 + EXP_1 + EXP_2 + EXP_3 +  HTRB_2 + HTRB_3 + HPICO  + CSECO +
SININFOTRF +  USODISPMOB
FA_2 ~ EDUBASICA + JOVEN30 + ADULTO40 + ADULTO60 + EXP_1 + EXP_2 + EXP_3 +
HTRB_2 + HTRB_3 + HPICO  + CSECO +
SININFOTRF +  USODISPMOB + FA_1
FA_3 ~ EDUBASICA + JOVEN30 + ADULTO40 + ADULTO60 + EXP_1 + EXP_2 + EXP_3 +
HTRB_2 + HTRB_3 + HPICO  + CSECO +
SININFOTRF + USODISPMOB
FA_4 ~ EDUBASICA + JOVEN30 + ADULTO40 + ADULTO60 + EXP_1 + EXP_2 + EXP_3 +
HTRB_2 + HTRB_3 + HPICO  + CSECO +
SININFOTRF  + USODISPMOB + FA_1
# Interceptos "
fit1_5 <- cfa(model1_5, data = MCond, orthogonal = TRUE)
summary(fit1_5, fit.measures= TRUE, standardized = TRUE)
#semPaths(fit1_4, what = "std", style = "mx", title = FALSE, curvePivot = TRUE)
#parameterestimates(fit11)
modindices(fit1_5, sort = TRUE, maximum.number = 10)
model1_6 <- " #Variables Latentes
FA_1 =~ FRbr  + AFrSem + CulFr
FA_2 =~ OmLmVel + IgPare + UsoCel + UsoPito
FA_3 =~ PasoPeaton + UsoDirec + UsoCel
FA_4 =~ UsoPito + EnfCond
# Regresiones
FA_1 ~  EXP_2 + HTRB_2 + USODISPMOB
FA_2 ~ ADULTO40 + EXP_1 + EXP_3 + HPICO  + CSECO + SININFOTRF +  USODISPMOB + FA_1
FA_3 ~ EDUBASICA + HTRB_2 + HTRB_3 +  USODISPMOB
FA_4 ~ JOVEN30 + ADULTO40 + ADULTO60 +  EXP_3 + FA_1
# Interceptos "
fit1_6 <- cfa(model1_6, data = MCond, orthogonal = TRUE)
summary(fit1_6, fit.measures= TRUE, standardized = TRUE)
#semPaths(fit1_4, what = "std", style = "mx", title = FALSE, curvePivot = TRUE)
#parameterestimates(fit11)
modindices(fit1_6, sort = TRUE, maximum.number = 10)
model2_4 <- " #Variables Latentes
FA_1 =~ FRbr + EnfCond + AFrSem + CulFr + UsoPito + UsoCel + UsoDirec
FA_2 =~ OmLmVel + IgPare
FA_3 =~ PasoPeaton + UsoDirec + UsoCel
# Regresiones
FA_1 ~ EDUBASICA + JOVEN30 + ADULTO40 + ADULTO60 + EXP_1 + EXP_2 + EXP_3 +
HTRB_2 + HTRB_3 + HPICO  + CSECO +
SININFOTRF + USODISPMOB
FA_2 ~ EDUBASICA + JOVEN30 + ADULTO40 + ADULTO60 + EXP_1 + EXP_2 + EXP_3 +
HTRB_2 + HTRB_3 + HPICO  + CSECO +
SININFOTRF + USODISPMOB + FA_1 + FA_3
FA_3 ~ EDUBASICA + JOVEN30 + ADULTO40 + ADULTO60 + EXP_1 + EXP_2 + EXP_3 +
HTRB_2 + HTRB_3 + HPICO  + CSECO +
SININFOTRF + USODISPMOB
# Interceptos "
fit2_4 <- sem(model2_4, data = MCond, orthogonal = TRUE)
summary(fit2_4, fit.measures=TRUE, standardized = TRUE)
#semPaths(fit2_3,"std", title = FALSE, curvePivot = TRUE)
# Solicitar los 10 primeros IM con valores m?s altos
modindices(fit2_4, sort = TRUE, maximum.number = 10)
X<-c(10.5, 11.3, 11.9, 12, 12.3, 12.3, 12.5, 12.7, 13.4, 13.7, 13.8, 14.2, 14.8, 15.1, 15.3, 16.7,
16.8, 18.8, 20.8)
X
boxplot(X)
Y<-c(2.3, 2.4, 3.5, 3.3, 2.6, 2.4, 2.5, 2.0, 1.6, 4.3,
4.2, 2.3, 2.0, 2.6, 2.9, 3.5, 4.6, 5.4, 5.7, 1.9,
1.6, 1.2, 3.2, 3.5, 2.6, 2.8, 2.0, 3.2, 1.6, 4.5,
2.9, 2.8, 2.5, 3.6, 3.5, 3.0, 3.4, 2.5, 2.1, 2.8,
2.9, 2.4, 2.1, 2.6, 2.7, 2.7, 2.6, 2.4, 2.5, 4.5)
Y
summary(Y)
hist(Y)
X<-c(10.5, 11.3, 11.9, 12, 12.3, 12.3, 12.5, 12.7, 13.4, 13.7, 13.8, 14.2, 14.8, 15.1, 15.3, 16.7,
16.8, 18.8, 20.8)
X
boxplot(X)
hist(X)
summary(X)
Z<c(9,12, 13.5, 14.2, 14.5, 12.8, 13.4, 13.7, 13.8, 14.2, 18, 18.9, 21)
Z<c(9,12, 13.5, 14.2, 14.5, 12.8, 13.4, 13.7, 13.8, 14.2, 18, 18.9, 21)
boxplot(Z)
Z<c(9,12, 13.5, 14.2, 14.5, 12.8, 13.4, 13.7, 13.8, 14.2, 18, 18.9, 21)
Z<- c(9,12, 13.5, 14.2, 14.5, 12.8, 13.4, 13.7, 13.8, 14.2, 18, 18.9, 21)
boxplot(Z)
summary(Z)
Z<- c(9,12, 13.5, 14.2, 14.5, 12.8, 13.4, 13.7, 13.8, 14.2,15, 16.3, 15,8, 17, 17.5, 17.9 18, 18.9, 21)
Z<- c(9,12, 13.5, 14.2, 14.5, 12.8, 13.4, 13.7, 13.8, 14.2,15, 16.3, 15,8, 17, 17.5, 17.9, 18, 18.9, 21)
boxplot(Z)
## Modelo sin la ruta 3
### Limpiar memoria
rm(list = ls())
workingDirectory="/Users/williz/Desktop/ModelosED/2. Articulo 2/1. Scripts/Modelos de Prueba/ICVL_MCond_3F/Version2"
setwd(workingDirectory)
### Cargar libreria Apollo
library(apollo)
### Inicializar código
apollo_initialise()
## Establecer controles principales
apollo_control = list(
modelName  = "ICLV_MCond_3FV2 ",
modelDescr = "ICLV Modo Conduccion de 3F_V2",
indivID    = "ViajeId",
mixing     = TRUE,
nCores     = 3
)
database = read.csv("/Users/williz/Desktop/ModelosED/2. Articulo 2/2. Database/DBMuestra_ModeloLogitVL.csv",sep="\t", dec=".",header=TRUE)
# Normalización de las variables tiempo
for (i in 1:nrow(database)){
database$T_Alt_1[i] = (database$TIEMPOAlt1[i]- (min(c(database$TIEMPOAlt1[i],database$TIEMPOAlt2[i],database$TIEMPOAlt3[i],database$TIEMPOEC[i])-3)))/(max(database$TIEMPOAlt1[i],database$TIEMPOAlt2[i],database$TIEMPOAlt3[i],database$TIEMPOEC[i])-(min(database$TIEMPOAlt1[i],database$TIEMPOAlt2[i],database$TIEMPOAlt3[i],database$TIEMPOEC[i])-3))
database$T_Alt_2[i] = (database$TIEMPOAlt2[i]- (min(c(database$TIEMPOAlt1[i],database$TIEMPOAlt2[i],database$TIEMPOAlt3[i],database$TIEMPOEC[i])-3)))/(max(database$TIEMPOAlt1[i],database$TIEMPOAlt2[i],database$TIEMPOAlt3[i],database$TIEMPOEC[i])-(min(database$TIEMPOAlt1[i],database$TIEMPOAlt2[i],database$TIEMPOAlt3[i],database$TIEMPOEC[i])-3))
database$T_Alt_3[i] = (database$TIEMPOAlt3[i]- (min(c(database$TIEMPOAlt1[i],database$TIEMPOAlt2[i],database$TIEMPOAlt3[i],database$TIEMPOEC[i])-3)))/(max(database$TIEMPOAlt1[i],database$TIEMPOAlt2[i],database$TIEMPOAlt3[i],database$TIEMPOEC[i])-(min(database$TIEMPOAlt1[i],database$TIEMPOAlt2[i],database$TIEMPOAlt3[i],database$TIEMPOEC[i])-3))
database$T_Alt_4[i] = (database$TIEMPOEC[i]- (min(c(database$TIEMPOAlt1[i],database$TIEMPOAlt2[i],database$TIEMPOAlt3[i],database$TIEMPOEC[i])-3)))/(max(database$TIEMPOAlt1[i],database$TIEMPOAlt2[i],database$TIEMPOAlt3[i],database$TIEMPOEC[i])-(min(database$TIEMPOAlt1[i],database$TIEMPOAlt2[i],database$TIEMPOAlt3[i],database$TIEMPOEC[i])-3))
# Normalización de la variable distancia
database$D_Alt_1[i] = (database$DISTAlt1[i]- (min(c(database$DISTAlt1[i],database$DISTAlt2[i],database$DISTAlt3[i],database$DISTEC[i])-0.1)))/(max(c(database$DISTAlt1[i],database$DISTAlt2[i],database$DISTAlt3[i],database$DISTEC[i]))-(min(c(database$DISTAlt1[i],database$DISTAlt2[i],database$DISTAlt3[i],database$DISTEC[i])-0.1)))
database$D_Alt_2[i] = (database$DISTAlt2[i]- (min(c(database$DISTAlt1[i],database$DISTAlt2[i],database$DISTAlt3[i],database$DISTEC[i])-0.1)))/(max(c(database$DISTAlt1[i],database$DISTAlt2[i],database$DISTAlt3[i],database$DISTEC[i]))-(min(c(database$DISTAlt1[i],database$DISTAlt2[i],database$DISTAlt3[i],database$DISTEC[i])-0.1)))
database$D_Alt_3[i] = (database$DISTAlt3[i]- (min(c(database$DISTAlt1[i],database$DISTAlt2[i],database$DISTAlt3[i],database$DISTEC[i])-0-1)))/(max(c(database$DISTAlt1[i],database$DISTAlt2[i],database$DISTAlt3[i],database$DISTEC[i]))-(min(c(database$DISTAlt1[i],database$DISTAlt2[i],database$DISTAlt3[i],database$DISTEC[i])-0.1)))
database$D_Alt_4[i] = (database$DISTEC[i]- (min(c(database$DISTAlt1[i],database$DISTAlt2[i],database$DISTAlt3[i],database$DISTEC[i])-0.1)))/(max(c(database$DISTAlt1[i],database$DISTAlt2[i],database$DISTAlt3[i],database$DISTEC[i]))-(min(c(database$DISTAlt1[i],database$DISTAlt2[i],database$DISTAlt3[i],database$DISTEC[i])-0.1)))
if(database$HPICOHVALLE[i] == 1){
database$Vel_fl_Alt1[i] = 28/60;
database$Vel_fl_Alt2[i] = 28/60;
database$Vel_fl_Alt3[i] = 28/60;
database$Vel_fl_Alt4[i] = 28/60}
else{database$Vel_fl_Alt1[i] = 22/60;
database$Vel_fl_Alt2[i] = 22/60;
database$Vel_fl_Alt3[i]= 22/60;
database$Vel_fl_Alt4[i]= 22/60}
database$T_fl_Alt1[i] = database$DISTAlt1[i]/database$Vel_fl_Alt1[i]
database$T_fl_Alt2[i] = database$DISTAlt2[i]/database$Vel_fl_Alt2[i]
database$T_fl_Alt3[i] = database$DISTAlt3[i]/database$Vel_fl_Alt3[i]
database$T_fl_Alt4[i] = database$DISTEC[i]/database$Vel_fl_Alt4[i]
database$CG_Alt_1[i] = database$TIEMPOAlt1[i]/database$T_fl_Alt1[i]
database$CG_Alt_2[i] = database$TIEMPOAlt2[i]/database$T_fl_Alt2[i]
database$CG_Alt_3[i] = database$TIEMPOAlt3[i]/database$T_fl_Alt3[i]
database$CG_Alt_4[i] = database$TIEMPOEC[i]/database$T_fl_Alt4[i]
}
database$UsoCel_Poco <- (ifelse((database$UsoCel == 1), 1,0))
#database$UsoCel_AlgVec <- (ifelse((database$UsoCel == 3 ), 1,0))
database$UsoCel_Frec <- (ifelse((database$UsoCel > 1 ), 1,0))
### Vector de parametros, incluidos los que se mantienen fijos en la estimación
apollo_beta=c(asc_ruta1   = 0, asc_ruta2   = 0, asc_ruta3   = 0, asc_ruta4  = 0,
b_tt  = 0,
b_dt  = 0,
b_Sem = 0,
b_ACC_0 = 0, b_ACC_1 = 0, b_ACC_2 = 0,
b_NO_CAMFD = 0, b_SI_CAMFD = 0,
b_NO_PANEL = 0, b_SI_PANEL = 0,
b_NO_ZER = 0, b_SI_ZER = 0,
b_No_MTRP = 0, b_Si_MTRP = 0,
b_No_Info = 0, b_Si_Info = 0,
b_UsoCel_P = 0, #b_UsoCel_A = 0,
b_UsoCel_F = 0,
lambda1        = 1,
lambda2        = 1,
lambda3       = 1,
#LV_1
gamma_EDUBASICA_LV1 = -0.217,
gamma_EDUSUP_LV1 = -0.423,
gamma_HPICO_LV1 = -0.124,
gamma_CSECO_LV1 = 0.211,
gamma_SININFOTRF_LV1 = -0.226,
gamma_LV2_LV1 = 0.982,
#LV_2
gamma_ADULTO40_LV2 = -0.310,
gamma_EXP_3_LV2 = -0.407,
gamma_EXP_4_LV2 = -0.269,
gamma_EXP_5_LV2 = -0.290,
gamma_HPICO_LV2 = 0.181,
gamma_USODISPMOB_LV2 = 0.261,
#LV_3
gamma_EDUBASICA_LV3 = -0.270,
gamma_JOVEN30_LV3 = -0.565,
gamma_ADULTO40_LV3 = -0.281,
gamma_EXP_2_LV3 = 0.431,
gamma_USODISPMOB_LV3 = -0.285,
zeta_FRbr     = 1, zeta_EnfCond  = 1, zeta_AFrSem   = 1, zeta_CulFr    = 1, zeta_OmLmVel  = 1,
zeta_IgPare    = 1,
zeta_PasoPeaton = 1,
zeta_UsoDirec = 1, zeta_UsoPito = 1,
tau_FRbr_1      =-2, tau_FRbr_2      =-1, tau_FRbr_3      = 1, tau_FRbr_4      = 2,
tau_EnfCond_1   =-2, tau_EnfCond_2   =-1, tau_EnfCond_3   = 1, tau_EnfCond_4   = 2,
tau_AFrSem_1    =-2, tau_AFrSem_2    =-1, tau_AFrSem_3    = 1, tau_AFrSem_4    = 2,
tau_CulFr_1     =-2,
tau_CulFr_2     =-1,
tau_CulFr_3     = 1,
tau_CulFr_4     = 2,
tau_OmLmVel_1     =-2,
tau_OmLmVel_2     =-1,
tau_OmLmVel_3     = 1,
tau_OmLmVel_4     = 2,
tau_IgPare_1     =-2,
tau_IgPare_2     =-1,
tau_IgPare_3     = 1,
tau_IgPare_4     = 2,
tau_PasoPeaton_1     =-2,
tau_PasoPeaton_2    =-1,
tau_PasoPeaton_3    = 1,
tau_PasoPeaton_4    = 2,
tau_UsoDirec_1     =-2,
tau_UsoDirec_2    =-1,
tau_UsoDirec_3    = 1,
tau_UsoDirec_4    = 2,
tau_UsoPito_1 = -2,
tau_UsoPito_2 = -1,
tau_UsoPito_3 = 1,
tau_UsoPito_4 = 2)
### Vector con nombres (entre comillas) de los parámetros que se mantendrán fijos en su valor inicial en apollo_beta, use apollo_beta_fixed = c () si ninguno
apollo_fixed = c("asc_ruta3", "b_ACC_0", "b_NO_CAMFD", "b_No_MTRP", "b_NO_PANEL", "b_NO_ZER",
"b_Si_Info", "b_UsoCel_P")
### Establecer parámetros para generar sorteos
apollo_draws = list(
interDrawsType="halton",
interNDraws=100,
interUnifDraws=c(),
interNormDraws=c("eta1","eta2","eta3")
)
### Crear parametros aleatorios
apollo_randCoeff=function(apollo_beta, apollo_inputs){
randcoeff = list()
randcoeff[["LV_2"]] = gamma_ADULTO40_LV2*ADULTO40 + gamma_EXP_3_LV2*EXP_3 + gamma_EXP_4_LV2*EXP_4 +
gamma_EXP_5_LV2*EXP_5 + gamma_HPICO_LV2*HPICO + gamma_USODISPMOB_LV2 * USODISPMOB + eta2
randcoeff[["LV_1"]] = gamma_EDUBASICA_LV1*EDUBASICA + gamma_EDUSUP_LV1*EDUSUP + gamma_HPICO_LV1*HPICO +
gamma_CSECO_LV1*CSECO + gamma_SININFOTRF_LV1*SININFOTRF + gamma_LV2_LV1*randcoeff[["LV_2"]] + eta1
randcoeff[["LV_3"]] = gamma_EDUBASICA_LV3*EDUBASICA + gamma_JOVEN30_LV3*JOVEN30 + gamma_ADULTO40_LV3*ADULTO40 +
gamma_EXP_2_LV3*EXP_2 + gamma_USODISPMOB_LV3 * USODISPMOB + eta3
return(randcoeff)
}
apollo_inputs = apollo_validateInputs()
apollo_probabilities=function(apollo_beta, apollo_inputs, functionality="estimate"){
### Attach inputs and detach after function exit
apollo_attach(apollo_beta, apollo_inputs)
on.exit(apollo_detach(apollo_beta, apollo_inputs))
### Create list of probabilities P
P = list()
### Likelihood of indicators
ol_settings1 = list(outcomeOrdered=FRbr,
V=zeta_FRbr*LV_1,
tau=c(tau_FRbr_1, tau_FRbr_2, tau_FRbr_3, tau_FRbr_4))
ol_settings2 = list(outcomeOrdered=AFrSem,
V=zeta_AFrSem*LV_1,
tau=c(tau_AFrSem_1, tau_AFrSem_2, tau_AFrSem_3, tau_AFrSem_4))
ol_settings3 = list(outcomeOrdered=EnfCond,
V=zeta_EnfCond*LV_1,
tau=c(tau_EnfCond_1, tau_EnfCond_2, tau_EnfCond_3, tau_EnfCond_4))
ol_settings4 = list(outcomeOrdered=UsoPito,
V=zeta_UsoPito*LV_1,
tau=c(tau_UsoPito_1, tau_UsoPito_2, tau_UsoPito_3, tau_UsoPito_4))
ol_settings5 = list(outcomeOrdered=CulFr,
V=zeta_CulFr*LV_1,
tau=c(tau_CulFr_1, tau_CulFr_2, tau_CulFr_3, tau_CulFr_4))
ol_settings6 = list(outcomeOrdered=IgPare,
V=zeta_IgPare*LV_2,
tau=c(tau_IgPare_1, tau_IgPare_2, tau_IgPare_3, tau_IgPare_4))
ol_settings7 = list(outcomeOrdered=OmLmVel,
V=zeta_OmLmVel*LV_2,
tau=c(tau_OmLmVel_1, tau_OmLmVel_2, tau_OmLmVel_3, tau_OmLmVel_4))
ol_settings8 = list(outcomeOrdered=PasoPeaton,
V=zeta_PasoPeaton*LV_3,
tau=c(tau_PasoPeaton_1, tau_PasoPeaton_2,tau_PasoPeaton_3,tau_PasoPeaton_4))
ol_settings9 = list(outcomeOrdered=UsoDirec,
V=zeta_UsoDirec*LV_3,
tau=c(tau_UsoDirec_1, tau_UsoDirec_2,tau_UsoDirec_3,tau_UsoDirec_4))
P[["indic_FRbr"]]       = apollo_ol(ol_settings1, functionality)
P[["indic_AFrSem"]]     = apollo_ol(ol_settings2, functionality)
P[["indic_EnfCond"]]    = apollo_ol(ol_settings3, functionality)
P[["indic_UsoPito"]]    = apollo_ol(ol_settings4, functionality)
P[["indic_CulFr"]]      = apollo_ol(ol_settings5, functionality)
P[["indic_IgPare"]]     = apollo_ol(ol_settings6, functionality)
P[["indic_OmLmVel"]]    = apollo_ol(ol_settings7, functionality)
P[["indic_PasoPeaton"]] = apollo_ol(ol_settings8, functionality)
P[["indic_UsoDirec"]]   = apollo_ol(ol_settings9, functionality)
### Likelihood of choices
### List of utilities: these must use the same names as in mnl_settings, order is irrelevant
V = list()
V[['ruta1']]  = (asc_ruta1  + b_tt * T_Alt_1*(1 + CG_Alt_1) + b_dt * D_Alt_1 +
b_Sem*SEM_A1_km +
b_ACC_0*ACC_A1_0 + b_ACC_1*ACC_A1_1 + b_ACC_2*ACC_A1_2 +
b_NO_CAMFD * NO_CAMFD_A1 + b_SI_CAMFD * SI_CAMFD_A1 +
b_NO_PANEL * NO_PANEL_A1 + b_SI_PANEL * SI_PANEL_A1 +
b_NO_ZER * NO_ZER_A1 + b_SI_ZER * SI_ZER_A1 +
b_No_MTRP * NO_MTRP_A1 + b_Si_MTRP * SI_MTRP_A1)
V[['ruta2']]  = ( asc_ruta2  + b_tt * T_Alt_2*(1 + CG_Alt_2) + b_dt * D_Alt_2 +
b_Sem*SEM_A2_km +
b_ACC_0*ACC_A2_0 + b_ACC_1*ACC_A2_1 + b_ACC_2*ACC_A2_2 +
b_NO_CAMFD * NO_CAMFD_A2 + b_SI_CAMFD * SI_CAMFD_A2 +
b_NO_PANEL * NO_PANEL_A2 + b_SI_PANEL * SI_PANEL_A2 +
b_NO_ZER * NO_ZER_A2 + b_SI_ZER * SI_ZER_A2 +
b_No_MTRP * NO_MTRP_A2 + b_Si_MTRP * SI_MTRP_A2)
V[['ruta3']]  = (asc_ruta3  + b_tt * T_Alt_3*(1 + CG_Alt_3) + b_dt * D_Alt_3 +
b_Sem*SEM_A3_km +
b_ACC_0*ACC_A3_0 + b_ACC_1*ACC_A3_1 + b_ACC_2*ACC_A3_2 +
b_NO_CAMFD * NO_CAMFD_A3 + b_SI_CAMFD * SI_CAMFD_A3 +
b_NO_PANEL * NO_PANEL_A3 + b_SI_PANEL * SI_PANEL_A3 +
b_NO_ZER * NO_ZER_A3 + b_SI_ZER * SI_ZER_A3 +
b_No_MTRP * NO_MTRP_A3 + b_Si_MTRP * SI_MTRP_A3)
V[['rutaEC']] = (asc_ruta4 + b_tt * T_Alt_4*(1 + CG_Alt_4) + b_dt * D_Alt_4 +
b_Sem*SEM_EC_km +
b_ACC_0*ACC_EC_0 + b_ACC_1*ACC_EC_1 + b_ACC_2*ACC_EC_2 +
b_NO_CAMFD * NO_CAMFD_EC + b_SI_CAMFD * SI_CAMFD_EC +
b_NO_PANEL * NO_PANEL_EC + b_SI_PANEL * SI_PANEL_EC +
b_NO_ZER * NO_ZER_EC + b_SI_ZER * SI_ZER_EC +
b_No_MTRP * NO_MTRP_EC + b_Si_MTRP * SI_MTRP_EC +
b_No_Info * SININFOTRF + b_Si_Info * CONINFOTRF +
b_UsoCel_P * UsoCel_Poco +  b_UsoCel_F * UsoCel_Frec +
lambda1 * LV_1 + lambda2 * LV_2 + lambda3 * LV_3 )
### Define settings for MNL model component
mnl_settings = list(
alternatives  = c(ruta1=1, ruta2=2, ruta3=3, rutaEC=4),
avail         = list(ruta1=1, ruta2=1, ruta3=1, rutaEC=1),
choiceVar     = CHOICE,
V             = V
)
### Compute probabilities for MNL model component
P[["choice"]] = apollo_mnl(mnl_settings, functionality)
### Likelihood of the whole model
P = apollo_combineModels(P, apollo_inputs, functionality)
### Take product across observation for same individual
#P = apollo_panelProd(P, apollo_inputs, functionality)
### Average across inter-individual draws
P = apollo_avgInterDraws(P, apollo_inputs, functionality)
### Prepare and return outputs of function
P = apollo_prepareProb(P, apollo_inputs, functionality)
return(P)
}
### Estimate model
model = apollo_estimate(apollo_beta, apollo_fixed, apollo_probabilities, apollo_inputs,
estimate_settings = list(maxIterations = 700))
apollo_modelOutput(model, modelOutput_settings=list(printPVal=TRUE) )
apollo_saveOutput(model, saveOutput_settings=list(printPVal=TRUE) )
qnorm(1.3)
pnorm(1.3)
pnorm(1.35)
pnorm(1.96)
pnorm(-1.96)
pnorm(1.64)
pnorm(-1.64)
pnorm(1.3)
pnorm(-1.3)
pnorm(-1.35)
pnorm(-1.3)
pnorm(-1.32)
pnorm(-1.28)
pnorm(-1.29)
pnorm(-1.28)
