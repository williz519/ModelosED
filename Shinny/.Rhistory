HABPROSOC =~ ComunicVerbal + ComunicAfectiva
# Regresiones
ACTAGRE + VIONORM + AMBLABORAL + STRESS + HABPROSOC ~ EDUBASICA +
EDUSUP + MENOR_60 + TIEMPO_PROFESION + HORASTRABAJO
# Varianzas y Covarianzas
STRESS~~HABPROSOC
ACTAGRE ~~VIONORM
# Interceptos "
fit3 <- lavaan::cfa(model3, data = DB, orthogonal = TRUE, std.lv = TRUE)
summary(fit3, fit.measures=TRUE, standardized = TRUE)
semPaths(fit3,"std", title = FALSE, curvePivot = TRUE)
modindices(fit3, sort = TRUE, maximum.number = 10)
fit_index <- broom::glance(fit1) %>%
select(chisq, npar, cfi, tli, rmsea, rmsea.conf.high, srmr, aic, bic, estimator)
fit_index02 <- broom::glance(fit2) %>%
select(chisq, npar, cfi, tli, rmsea, rmsea.conf.high, srmr, aic, bic, estimator)
fit_index03 <- broom::glance(fit3) %>%
select(chisq, npar, cfi, tli, rmsea, rmsea.conf.high, srmr, aic, bic, estimator)
bind_rows(fit_index, fit_index02, fit_index03, .id = "Modelo")
modindices(fit3, sort = TRUE, maximum.number = 10)
model4 <- " #Variables Latentes
ACTAGRE =~ FrenoRapidoBrusco + AceleraFrenaBruscamenteSemaforo + CulebreaConFrecuencia
VIONORM =~  OmiteLimiteVelocidad + IgnoraSenhalPare + UsaDireccionales
AMBLABORAL =~ PresPersonal + AmbTrabajo + ConsidCliente
STRESS =~ Ansiedad + StressAlCond
HABPROSOC =~ ComunicVerbal + ComunicAfectiva
# Regresiones
ACTAGRE + VIONORM + AMBLABORAL + STRESS + HABPROSOC ~ EDUBASICA +
EDUSUP + MENOR_60 + TIEMPO_PROFESION + HORASTRABAJO
AMBLABORAL~ VIONORM
# Varianzas y Covarianzas
STRESS~~HABPROSOC
ACTAGRE ~~VIONORM
# Interceptos "
fit4 <- lavaan::cfa(model4, data = DB, orthogonal = TRUE, std.lv = TRUE)
summary(fit4, fit.measures=TRUE, standardized = TRUE)
semPaths(fit4,"std", title = FALSE, curvePivot = TRUE)
modindices(fit4, sort = TRUE, maximum.number = 10)
model5 <- " #Variables Latentes
ACTAGRE =~ FrenoRapidoBrusco + AceleraFrenaBruscamenteSemaforo + CulebreaConFrecuencia
VIONORM =~  OmiteLimiteVelocidad + IgnoraSenhalPare + UsaDireccionales
AMBLABORAL =~ PresPersonal + AmbTrabajo + ConsidCliente
STRESS =~ Ansiedad + StressAlCond
HABPROSOC =~ ComunicVerbal + ComunicAfectiva
# Regresiones
ACTAGRE + VIONORM + AMBLABORAL + STRESS + HABPROSOC ~ EDUBASICA +
EDUSUP + MENOR_60 + TIEMPO_PROFESION + HORASTRABAJO
AMBLABORAL~ VIONORM
# Varianzas y Covarianzas
STRESS~~HABPROSOC
ACTAGRE ~~VIONORM
PresPersonal ~~ AmbTrabajo
# Interceptos "
fit5 <- lavaan::cfa(model5, data = DB, orthogonal = TRUE, std.lv = TRUE)
summary(fit5, fit.measures=TRUE, standardized = TRUE)
semPaths(fit5,"std", title = FALSE, curvePivot = TRUE)
modindices(fit5, sort = TRUE, maximum.number = 10)
fit_index04 <- broom::glance(fit4) %>%
select(chisq, npar, cfi, tli, rmsea, rmsea.conf.high, srmr, aic, bic, estimator)
fit_index05 <- broom::glance(fit5) %>%
select(chisq, npar, cfi, tli, rmsea, rmsea.conf.high, srmr, aic, bic, estimator)
bind_rows(fit_index, fit_index02, fit_index03, fit_index04, fit_index05, .id = "Modelo")
modindices(fit5, sort = TRUE, maximum.number = 10)
model1 <- " #Variables Latentes
ACTAGRE =~ FrenoRapidoBrusco + AceleraFrenaBruscamenteSemaforo +CulebreaConFrecuencia
VIONORM =~  OmiteLimiteVelocidad + IgnoraSenhalPare + UsaDireccionales
AMBLABORAL =~ PresPersonal + AmbTrabajo + ConsidCliente
STRESS =~ Ansiedad + StressAlCond
HABPROSOC =~ ComunicVerbal + ComunicAfectiva
# Regresiones
ACTAGRE + VIONORM + AMBLABORAL + STRESS + HABPROSOC ~ EDUBASICA +
EDUSUP + MENOR_60 + TIEMPO_PROFESION + HORASTRABAJO
# Interceptos"
fit1 <- lavaan::cfa(model1, data = DB, orthogonal = TRUE, std.lv = TRUE)
summary(fit1, fit.measures=TRUE, standardized = TRUE)
semPaths(fit1,"std", title = FALSE, curvePivot = TRUE)
semPaths(fit1,"std", title = FALSE, curvePivot = TRUE)
model1 <- " #Variables Latentes
ACTAGRE =~ FrenoRapidoBrusco + AceleraFrenaBruscamenteSemaforo +CulebreaConFrecuencia
VIONORM =~  OmiteLimiteVelocidad + IgnoraSenhalPare + UsaDireccionales
AMBLABORAL =~ PresPersonal + AmbTrabajo + ConsidCliente
STRESS =~ Ansiedad + StressAlCond
HABPROSOC =~ ComunicVerbal + ComunicAfectiva
# Regresiones
ACTAGRE + VIONORM + AMBLABORAL + STRESS + HABPROSOC ~ EDUBASICA +
MENOR_60 + TIEMPO_PROFESION + HORASTRABAJO
# Interceptos"
fit1 <- lavaan::cfa(model1, data = DB, orthogonal = TRUE, std.lv = TRUE)
summary(fit1, fit.measures=TRUE, standardized = TRUE)
semPaths(fit1,"std", title = FALSE, curvePivot = TRUE)
modindices(fit1, sort = TRUE, maximum.number = 10)
model2 <- " #Variables Latentes
ACTAGRE =~ FrenoRapidoBrusco + AceleraFrenaBruscamenteSemaforo +CulebreaConFrecuencia
VIONORM =~  OmiteLimiteVelocidad + IgnoraSenhalPare + UsaDireccionales
AMBLABORAL =~ PresPersonal + AmbTrabajo + ConsidCliente
STRESS =~ Ansiedad + StressAlCond
HABPROSOC =~ ComunicVerbal + ComunicAfectiva
# Regresiones
ACTAGRE + VIONORM + AMBLABORAL + STRESS + HABPROSOC ~ EDUBASICA +
MENOR_60 + TIEMPO_PROFESION + HORASTRABAJO
HABPROSOC~STRESS
#Varianza Covarianzas
STRESS ~~ HABPROSOC
# Interceptos"
fit2 <- lavaan::cfa(model2, data = DB, orthogonal = TRUE, std.lv = TRUE)
summary(fit1, fit.measures=TRUE, standardized = TRUE)
semPaths(fit2,"std", title = FALSE, curvePivot = TRUE)
modindices(fit2, sort = TRUE, maximum.number = 10)
modindices(fit1, sort = TRUE, maximum.number = 10)
model2 <- " #Variables Latentes
ACTAGRE =~ FrenoRapidoBrusco + AceleraFrenaBruscamenteSemaforo +CulebreaConFrecuencia
VIONORM =~  OmiteLimiteVelocidad + IgnoraSenhalPare + UsaDireccionales
AMBLABORAL =~ PresPersonal + AmbTrabajo + ConsidCliente
STRESS =~ Ansiedad + StressAlCond
HABPROSOC =~ ComunicVerbal + ComunicAfectiva
# Regresiones
ACTAGRE + VIONORM + AMBLABORAL + STRESS + HABPROSOC ~ EDUBASICA +
MENOR_60 + TIEMPO_PROFESION + HORASTRABAJO
VIONORM  ~         ACTAGRE
#Varianza Covarianzas
ACTAGRE ~~         VIONORM
# Interceptos"
fit2 <- lavaan::cfa(model2, data = DB, orthogonal = TRUE, std.lv = TRUE)
model2 <- " #Variables Latentes
ACTAGRE =~ FrenoRapidoBrusco + AceleraFrenaBruscamenteSemaforo +CulebreaConFrecuencia
VIONORM =~  OmiteLimiteVelocidad + IgnoraSenhalPare + UsaDireccionales
AMBLABORAL =~ PresPersonal + AmbTrabajo + ConsidCliente
STRESS =~ Ansiedad + StressAlCond
HABPROSOC =~ ComunicVerbal + ComunicAfectiva
# Regresiones
ACTAGRE + VIONORM + AMBLABORAL + STRESS + HABPROSOC ~ EDUBASICA +
MENOR_60 + TIEMPO_PROFESION + HORASTRABAJO
#Varianza Covarianzas
ACTAGRE ~~ VIONORM
# Interceptos"
fit2 <- lavaan::cfa(model2, data = DB, orthogonal = TRUE, std.lv = TRUE)
summary(fit1, fit.measures=TRUE, standardized = TRUE)
semPaths(fit2,"std", title = FALSE, curvePivot = TRUE)
modindices(fit2, sort = TRUE, maximum.number = 10)
model3 <- " #Variables Latentes
ACTAGRE =~ FrenoRapidoBrusco + AceleraFrenaBruscamenteSemaforo +CulebreaConFrecuencia
VIONORM =~  OmiteLimiteVelocidad + IgnoraSenhalPare + UsaDireccionales
AMBLABORAL =~ PresPersonal + AmbTrabajo + ConsidCliente
STRESS =~ Ansiedad + StressAlCond
HABPROSOC =~ ComunicVerbal + ComunicAfectiva
# Regresiones
ACTAGRE + VIONORM + AMBLABORAL + STRESS + HABPROSOC ~ EDUBASICA +
MENOR_60 + TIEMPO_PROFESION + HORASTRABAJO
#Varianza Covarianzas
ACTAGRE ~~ VIONORM
AMBLABORAL ~~ HABPROSOC
# Interceptos"
fit3 <- lavaan::cfa(model3, data = DB, orthogonal = TRUE, std.lv = TRUE)
summary(fit3, fit.measures=TRUE, standardized = TRUE)
semPaths(fit3,"std", title = FALSE, curvePivot = TRUE)
modindices(fit3, sort = TRUE, maximum.number = 10)
fit_index <- broom::glance(fit1) %>%
select(chisq, npar, cfi, tli, rmsea, rmsea.conf.high, srmr, aic, bic, estimator)
fit_index02 <- broom::glance(fit2) %>%
select(chisq, npar, cfi, tli, rmsea, rmsea.conf.high, srmr, aic, bic, estimator)
fit_index03 <- broom::glance(fit3) %>%
select(chisq, npar, cfi, tli, rmsea, rmsea.conf.high, srmr, aic, bic, estimator)
bind_rows(fit_index, fit_index02, fit_index03, .id = "Modelo")
model4 <- " #Variables Latentes
ACTAGRE =~ FrenoRapidoBrusco + AceleraFrenaBruscamenteSemaforo +CulebreaConFrecuencia
VIONORM =~  OmiteLimiteVelocidad + IgnoraSenhalPare + UsaDireccionales
AMBLABORAL =~ PresPersonal + AmbTrabajo + ConsidCliente
STRESS =~ Ansiedad + StressAlCond
HABPROSOC =~ ComunicVerbal + ComunicAfectiva
# Regresiones
ACTAGRE + VIONORM + AMBLABORAL + STRESS + HABPROSOC ~ EDUBASICA +
MENOR_60 + TIEMPO_PROFESION + HORASTRABAJO
#Varianza Covarianzas
ACTAGRE ~~ VIONORM
AMBLABORAL ~~ HABPROSOC
PresPersonal ~~ AmbTrabajo
# Interceptos"
fit4 <- lavaan::cfa(model4, data = DB, orthogonal = TRUE, std.lv = TRUE)
summary(fit4, fit.measures=TRUE, standardized = TRUE)
semPaths(fit4,"std", title = FALSE, curvePivot = TRUE)
modindices(fit4, sort = TRUE, maximum.number = 10)
model5 <- " #Variables Latentes
ACTAGRE =~ FrenoRapidoBrusco + AceleraFrenaBruscamenteSemaforo +CulebreaConFrecuencia
VIONORM =~  OmiteLimiteVelocidad + IgnoraSenhalPare + UsaDireccionales
AMBLABORAL =~ PresPersonal + AmbTrabajo + ConsidCliente
STRESS =~ Ansiedad + StressAlCond
HABPROSOC =~ ComunicVerbal + ComunicAfectiva
# Regresiones
ACTAGRE + VIONORM + AMBLABORAL + STRESS + HABPROSOC ~ EDUBASICA +
MENOR_60 + TIEMPO_PROFESION + HORASTRABAJO
#Varianza Covarianzas
ACTAGRE ~~ VIONORM
AMBLABORAL ~~ HABPROSOC
PresPersonal ~~ AmbTrabajo
Ansiedad ~~ ComunicAfectiva
# Interceptos"
fit5 <- lavaan::cfa(model5, data = DB, orthogonal = TRUE, std.lv = TRUE)
summary(fit5, fit.measures=TRUE, standardized = TRUE)
semPaths(fit5,"std", title = FALSE, curvePivot = TRUE)
modindices(fit5, sort = TRUE, maximum.number = 10)
fit_index04 <- broom::glance(fit4) %>%
select(chisq, npar, cfi, tli, rmsea, rmsea.conf.high, srmr, aic, bic, estimator)
fit_index05 <- broom::glance(fit5) %>%
select(chisq, npar, cfi, tli, rmsea, rmsea.conf.high, srmr, aic, bic, estimator)
bind_rows(fit_index, fit_index02, fit_index03, fit_index04, fit_index05, .id = "Modelo")
modindices(fit5, sort = TRUE, maximum.number = 10)
model6 <- " #Variables Latentes
ACTAGRE =~ FrenoRapidoBrusco + AceleraFrenaBruscamenteSemaforo +CulebreaConFrecuencia
VIONORM =~  OmiteLimiteVelocidad + IgnoraSenhalPare + UsaDireccionales
AMBLABORAL =~ PresPersonal + AmbTrabajo + ConsidCliente
STRESS =~ Ansiedad + StressAlCond
HABPROSOC =~ ComunicVerbal + ComunicAfectiva
# Regresiones
ACTAGRE + VIONORM + AMBLABORAL + STRESS + HABPROSOC ~ EDUBASICA +
MENOR_60 + TIEMPO_PROFESION + HORASTRABAJO
#Varianza Covarianzas
ACTAGRE ~~ VIONORM
AMBLABORAL ~~ HABPROSOC
PresPersonal ~~ AmbTrabajo
Ansiedad ~~ ComunicAfectiva
AMBLABORAL ~~       STRESS
# Interceptos"
fit6 <- lavaan::cfa(model6, data = DB, orthogonal = TRUE, std.lv = TRUE)
summary(fit6, fit.measures=TRUE, standardized = TRUE)
semPaths(fit6,"std", title = FALSE, curvePivot = TRUE)
modindices(fit6, sort = TRUE, maximum.number = 10)
model6 <- " #Variables Latentes
ACTAGRE =~ FrenoRapidoBrusco + AceleraFrenaBruscamenteSemaforo +CulebreaConFrecuencia
VIONORM =~  OmiteLimiteVelocidad + IgnoraSenhalPare + UsaDireccionales
AMBLABORAL =~ PresPersonal + AmbTrabajo + ConsidCliente
STRESS =~ Ansiedad + StressAlCond
HABPROSOC =~ ComunicVerbal + ComunicAfectiva
# Regresiones
ACTAGRE + VIONORM + AMBLABORAL + STRESS + HABPROSOC ~ EDUBASICA +
MENOR_60 + TIEMPO_PROFESION + HORASTRABAJO
#Varianza Covarianzas
ACTAGRE ~~ VIONORM
AMBLABORAL ~~ HABPROSOC
PresPersonal ~~ AmbTrabajo
Ansiedad ~~ ComunicAfectiva
AMBLABORAL ~~STRESS
# Interceptos"
fit6 <- lavaan::cfa(model6, data = DB, orthogonal = TRUE, std.lv = TRUE)
summary(fit6, fit.measures=TRUE, standardized = TRUE)
semPaths(fit6,"std", title = FALSE, curvePivot = TRUE)
modindices(fit6, sort = TRUE, maximum.number = 10)
model6 <- " #Variables Latentes
ACTAGRE =~ FrenoRapidoBrusco + AceleraFrenaBruscamenteSemaforo +CulebreaConFrecuencia
VIONORM =~  OmiteLimiteVelocidad + IgnoraSenhalPare + UsaDireccionales
AMBLABORAL =~ PresPersonal + AmbTrabajo + ConsidCliente
STRESS =~ Ansiedad + StressAlCond
HABPROSOC =~ ComunicVerbal + ComunicAfectiva
# Regresiones
ACTAGRE + VIONORM + AMBLABORAL + STRESS + HABPROSOC ~ EDUBASICA +
MENOR_60 + TIEMPO_PROFESION + HORASTRABAJO
#Varianza Covarianzas
ACTAGRE ~~ VIONORM
AMBLABORAL ~~ HABPROSOC
PresPersonal ~~ AmbTrabajo
Ansiedad ~~ ComunicAfectiva
AMBLABORAL ~~STRESS
Ansiedad ~~ StressAlCond
# Interceptos"
fit6 <- lavaan::cfa(model6, data = DB, orthogonal = TRUE, std.lv = TRUE)
summary(fit6, fit.measures=TRUE, standardized = TRUE)
semPaths(fit6,"std", title = FALSE, curvePivot = TRUE)
modindices(fit6, sort = TRUE, maximum.number = 10)
fit_index06 <- broom::glance(fit6) %>%
select(chisq, npar, cfi, tli, rmsea, rmsea.conf.high, srmr, aic, bic, estimator)
bind_rows(fit_index, fit_index02, fit_index03, fit_index04, fit_index05, fit_index06, .id = "Modelo")
parameterEstimates(fit1, standardized = TRUE, ci = FALSE)
library(lavaan)
parameterEstimates(fit1, standardized = TRUE, ci = FALSE)
install.packages("R.matlab")
library(R.matlab)
Matlab$startServer()
matlab <- Matlab()
isOpen <- open(matlab)
install.packages("matlabr")
run_matlab_script(C:\Users\sin definir\Downloads\ypea103-ant-colony-optimization (1)\YPEA103 Ant Colony Optimization\01 ACO for TSP\aco.m, verbose = TRUE, desktop = FALSE,
splash = FALSE, display = FALSE, wait = TRUE,
single_thread = FALSE)
install.packages("matlabr")
library(matlabr)
run_matlab_script(C:\Users\sin definir\Downloads\ypea103-ant-colony-optimization (1)\YPEA103 Ant Colony Optimization\01 ACO for TSP\aco.m, verbose = TRUE, desktop = FALSE,
splash = FALSE, display = FALSE, wait = TRUE,
single_thread = FALSE)
run_matlab_script(aco.m, verbose = TRUE, desktop = FALSE,
splash = FALSE, display = FALSE, wait = TRUE,
single_thread = FALSE)
run_matlab_script(C:\Users\sin definir\Downloads\ypea103-ant-colony-optimization (1)\YPEA103 Ant Colony Optimization\01 ACO for TSP\aco.m, verbose = TRUE, desktop = FALSE)
run_matlab_script(C:/Users/sin definir/Downloads/ypea103-ant-colony-optimization (1)/YPEA103 Ant Colony Optimization/01 ACO for TSP/aco.m, verbose = TRUE, desktop = FALSE)
run_matlab_script(C:/Users/sin definir/Downloads/ypea103-ant-colony-optimization (1)/YPEA103 Ant Colony Optimization/01 ACO for TSP/aco.m, verbose = TRUE, desktop = FALSE)
run_matlab_script(C:\Users\sin definir\Downloads\ypea103-ant-colony-optimization (1)\YPEA103 Ant Colony Optimization\01 ACO for TSP\aco.m, verbose = TRUE, desktop = FALSE)
run_matlab_script(aco.m, verbose = TRUE, desktop = FALSE)
run_matlab_script(/Users/sin definir/Downloads/ypea103-ant-colony-optimization (1)/YPEA103 Ant Colony Optimization/01 ACO for TSP/aco.m, verbose = TRUE, desktop = FALSE)
run_matlab_script("/Users/sin definir/Downloads/ypea103-ant-colony-optimization (1)/YPEA103 Ant Colony Optimization/01 ACO for TSP/aco.m", verbose = TRUE, desktop = FALSE)
run_matlab_script("/Users/sin definir/Downloads/ypea103-ant-colony-optimization (1)/YPEA103 Ant Colony Optimization/01 ACO for TSP/aco.m", verbose = TRUE, desktop = FALSE)
shiny::runApp('C:/Users/sin definir/Desktop/Shinny')
runApp('C:/Users/sin definir/Desktop/Shinny')
runApp('C:/Users/sin definir/Desktop/Shinny')
runApp('C:/Users/sin definir/Desktop/Shinny')
runApp('C:/Users/sin definir/Desktop/Shinny')
runApp('C:/Users/sin definir/Desktop/Shinny')
library(tidyverse)
library(tidyverse)
library(readxl)
library(lubridate)
library(sf)
library(leaflet)
library(RColorBrewer)
# Leer la DB
DB_file <- "CamFotomultas.xlsx"
DB <- DB_file %>%
excel_sheets() %>%
set_names() %>%
map(read_xlsx, path = DB_file)
# Ubicación Camaras
Camaras <- DB$Hoja1 %>%
separate(Direccion,
c("Ub1", "Ub2"),
sep = " - ", extra = "merge") %>%
arrange(Ub1) %>%
mutate(Cod = 1:n()) %>%
st_as_sf(coords = c("Point_X",
"Point_X")) %>%
st_set_crs(4326)
# Guardar los datos para alimentar la WebApp
saveRDS(Camaras, file.path("Camaras.rds"))
DB_file <- "CamFotomultas.xlsx"
DB <- DB_file %>%
excel_sheets() %>%
set_names() %>%
map(read_xlsx, path = DB_file)
library(tidyverse)
library(readxl)
library(lubridate)
library(sf)
library(leaflet)
library(RColorBrewer)
DB_file <- "CamFotomultas.xlsx"
DB <- DB_file %>%
excel_sheets() %>%
set_names() %>%
map(read_xlsx, path = DB_file)
DB_file <- "CamFotomultas.xlsx"
DB <- DB_file %>%
excel_sheets() %>%
set_names() %>%
map(read_xlsx, path = DB_file)
DB <- DB_file %>%
excel_sheets() %>%
set_names() %>%
map(read_xlsx, path = DB_file)
Camaras <- DB$Hoja1 %>%
separate(Direccion,
c("Ub1", "Ub2"),
sep = " - ", extra = "merge") %>%
arrange(Ub1) %>%
mutate(Cod = 1:n()) %>%
st_as_sf(coords = c("Point_X",
"Point_X")) %>%
st_set_crs(4326)
DB <- DB_file %>%
excel_sheets() %>%
set_names() %>%
map(read_xlsx, path = DB_file)
DB_file <- "DB_Viajes.xlsx"
DB <- DB_file %>%
excel_sheets() %>%
set_names() %>%
map(read_xlsx, path = DB_file)
Ubicacion <- DB$Ubicacion %>%
separate(Nombre,
c("Nombre", "Zona"),
sep = " - Zona ") %>%
arrange(Nombre) %>%
mutate(Cod = 1:n()) %>%
st_as_sf(coords = c("Longitud",
"Latitud")) %>%
st_set_crs(4326)
library(shiny)
library(shinythemes)
library(shinydashboard)
library(tidyverse)
library(scales)
library(sf)
library(leaflet)
library(RColorBrewer)
library(readxl)
library(DT)
rm(list = ls())
dataset <- read_excel("Estadisticas desempleo OA.xlsx",
sheet = "Respuestas")
dataset <- read_excel("Estadisticas desempleo OA.xlsx",
sheet = "Respuestas")
getwd()
getwd()
getwd()
shiny::runApp('C:/Users/sin definir/Desktop/ModelosED/ModelosED/Shinny')
Ubicacion <- readRDS(file.path("Ubicacion.rds"))
Rutas     <- readRDS(file.path("Rutas.rds"))
getwd()
setwd("C:/Users/sin definir/Desktop/ModelosED/ModelosED/Shinny")
getwd()
Ubicacion <- readRDS(file.path("Ubicacion.rds"))
View(Ubicacion)
Rutas     <- readRDS(file.path("Rutas.rds"))
Puntos    <- readRDS(file.path("Puntos.rds"))
Camaras   <- readRDS(file.path("Camaras.rds"))
View(Puntos)
View(Rutas)
View(Ubicacion)
runApp()
runApp()
runApp('appsPrueba.R')
runApp('appsPrueba.R')
runApp('appsPrueba.R')
runApp('appsPrueba.R')
Ubicacion <- readRDS(file.path("Ubicacion.rds"))
Rutas     <- readRDS(file.path("Rutas.rds"))
Puntos    <- readRDS(file.path("Puntos.rds"))
ui <- tabPanel("Diagramas",
fluidRow(align = "center",
column(width = 6,
plotOutput("scatterPlot", height = 500),
fluidRow(
column(width = 6,
selectInput("x", "Eje X:", selected = "Costo",
choices = c("Costo",
"Duracion" = "Duracion",
"Distancia",
"Velocidad media" = "V_promedio",
"Velocidad total" = "V_total"))),
column(width = 6,
selectInput("y", "Eje Y:", selected = "Duracion",
choices = c("Costo",
"Duracion" = "Duracion",
"Distancia",
"Velocidad media" = "V_promedio",
"Velocidad total" = "V_total")))
))))
tabPanel("Datos", DTOutput("datos"))
server <- function(input, output, session) {
# Datos reactivos de Rutas (lineas) ------------------------------------------
datosRutas <- reactive({
filter(Rutas,
str_detect(ViajeId, input$ViajeId),
str_detect(OrigenId, input$OrigenId),
str_detect(Zona_Origen, input$Zona_Origen),
str_detect(DestinoId, input$DestinoId),
str_detect(Zona_Destino, input$Zona_Destino),
str_detect(Dia, input$Dia),
str_detect(Meridiano, input$Hora),
str_detect(Horario, input$Horario),
str_detect(Clima, input$Clima),
str_detect(Congestion, input$Congestion),
str_detect(Pavimento, input$Pavimento),
str_detect(Incidente, input$Incidente))
})
# Datos reactivos de Puntos --------------------------------------------------
datosPuntos <- reactive({
filter(Puntos,
str_detect(ViajeId, input$ViajeId))
})
# Renderizar el diagrama de dispersion----------------------------------------
output$scatterPlot <- renderPlot({
ggplot(datosRutas(),
aes_string(x = input$x,
y = input$y)) +
geom_point() +
scale_x_continuous(labels = unidades(input$x)) +
scale_y_continuous(labels = unidades(input$y))
})
# Renderizar los datos -------------------------------------------------------
output$datos <- renderDT({
datosRutas() %>%
as.data.frame() %>%
select(Cod_Viaje,
Nombre_Origen, Zona_Origen,
Nombre_Destino, Zona_Destino,
Dia, Meridiano, Horario,
Clima, Congestion,
Pavimento, Incidente,
Costo, Duracion, Distancia,
V_promedio, V_total) %>%
datatable(rownames = FALSE,
options = list(dom = "Bltip",
buttons = I("colvis")),
extensions = c("Responsive",
"Buttons"),
colnames = c("Codigo Viaje"    = 1,
"Origen"          = 2,
"Zona de Origen"  = 3,
"Destino"         = 4,
"Zona de Destino" = 5,
"Congestion"      = 10,
"Duracion"        = 14,
"Velocidad media" = 16,
"Velocidad total" = 17),
selection = "none") %>%
formatCurrency("Costo") %>%
formatRound("Duracion", 1) %>%
formatString("Duracion", suffix = " min") %>%
formatRound("Distancia", 1) %>%
formatString("Distancia", suffix = " km") %>%
formatRound(c("Velocidad media", "Velocidad total"), 0) %>%
formatString(c("Velocidad media", "Velocidad total"), suffix = " km/h")
})
}
shinyApp(ui, server)
runApp('appsPrueba.R')
